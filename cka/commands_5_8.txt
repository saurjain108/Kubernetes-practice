    1  exit
    2  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    3  sudo add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
    4     $(lsb_release -cs) \
    5     stable"
    6  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    7  cat << EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
    8  deb https://apt.kubernetes.io/ kubernetes-xenial main
    9  EOF
   10  sudo apt-get update
   11  sudo apt-get install -y docker-ce=18.06.1~ce~3-0~ubuntu kubelet=1.12.2-00 kubeadm=1.12.2-00 kubectl=1.12.2-00
   12  sudo apt-mark hold docker-ce kubelet kubeadm kubectl
   13  echo "net.bridge.bridge-nf-call-iptables=1" | sudo tee -a /etc/sysctl.conf
   14  sudo sysctl -p
   15  sudo kubeadm init --pod-network-cidr=10.244.0.0/16
   16  mkdir -p $HOME/.kube
   17  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   18  sudo chown $(id -u):$(id -g) $HOME/.kube/config
   19  kubectl get nodes
   20  kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/bc79dd1505b0c8681ece4de4c0d86c5cd2643275/Documentation/kube-flannel.yml
   21  kubectl get nodes
   22  kubectl get pods
   23  kubectl get pods --all-namespaces 
   24  kubectl get nodes
   25  kubectl get nodes -o wide
   26  kubectl get --help
   27  kubectl get deploments
   28  kubectl get deployments
   29  kubectl get pods --all-namespaces 
   30  kubectl get pods
   31  kubectl get nodes
   32  kubectl get pods --all-namespaces 
   33  kubectl get nodes
   34  kubectl get deploments 
   35  kubectl get deployments 
   36  kubectl get --help
   37  kubectl get sc
   38  kubectl get sc -o wide 
   39  kubectl get nodes -o wide
   40  kubectl get nodes -o yaml > tp.yml
   41  ls
   42  cat tp.yml 
   43  kubectl get ns
   44  cat << EOF | kubectl create -f -
   45  kubectl get pods
   46  kubectl get pods -o wide
   47  kubectl describe pod nginx
   48  kubectl get pod -o yaml >> firstpod.yml
   49  ls
   50  cat firstpod.yml 
   51  kubectl get pod -o yaml
   52  cat firstpod.yml 
   53  kubectl describe pod nginx | grep name
   54  kubectl describe pod nginx 
   55  kubectl get pod rc
   56  kubectl get rc
   57  kubectl get deployments
   58  vi firstdeplyment.yml
   59  kubectl create -f firstdeplyment.yml 
   60  vi firstdeplyment.yml
   61  kubectl create -f firstdeplyment.yml 
   62  kubectl get deployments
   63  kubectl get deployments -o wide
   64  kubectl get rc
   65  vi firstdeplyment.yml
   66  kubectl get rc
   67  kubectl get deployments
   68  kubectl describe deploment nginx-deployment
   69  kubectl describe deployment nginx-deployment
   70  kubectl describe deploment nginx-deployment
   71  kubectl get deployments
   72  kubectl get nodes
   73  kubectl describe node saineel143c.mylabserver.com
   74  kubectl describe node saineel143c.mylabserver.com | grep tname-over
   75  kubectl describe node saineel143c.mylabserver.com | grep [Hh]ost
   76  kubectl get pods --all-namespaces 
   77  kubectl get componentstatus 
   78  sudo apt-get install git
   79  sudo apt autoremove
   80  sudo apt-get install git
   81  git clone https://github.com/saurjain108/Kubernetes-practice.git
   82  ls
   83  cd Kubernetes-practice/
   84  ls
   85  git add *
   86  git status 
   87  ls
   88  cd practice/
   89  ls
   90  cat replicationcontroller.yml 
   91  cd
   92  cd Kubernetes-practice/
   93  ls
   94  mkdir cka
   95  cd cka/
   96  ls
   97  touch firstpod.yml
   98  vi firstpod.yml 
   99  kubectl create -f firstpod.yml 
  100  cd
  101  kubectl get pods
  102  kubectl get deployment
  103  kubectl get deployment -o wide 
  104  kubectl describe deployment nginx-deployment | grep [pP]od
  105  kubectl describe deployment nginx-deployment
  106  kubectl describe deployment nginx-deployment | grep [nN]ode
  107  cd Kubernetes-practice/
  108  git add *
  109  git status 
  110  git commit -m "adding a directory of cks"
  111  git config --global user.email "you@example.com"
  112  git config --global user.email "rony.jain108@gmail.com"
  113  git config --global user.name "Raunak Jain"
  114  git commit -m "adding a directory of cks"
  115  git push 
  116  cd
  117  kubectl get componentstatus 
  118  kubectl get pods --show;labe;s
  119  kubectl get pods --show-labes
  120  kubectl get pods --show-labels
  121  kubectl get deployment --show-labels
  122  kubectl get pods nginx env=prod
  123  kubectl label pods nginx env=prod
  124  kubectl get pods --show-labels
  125  kubectl get pods -L env
  126  kubectl get pods
  127  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp
  128  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp | grep [Ss]elect
  129  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp | grep field
  130  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp | grep label
  131  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp -o yaml
  132  kubectl get pod nginx-deployment-5c689d88bb-rm8rp -o yaml
  133  kubectl get pod nginx-deployment-5c689d88bb-rm8rp -o yaml | grep label
  134  kubectl get pod nginx-deployment-5c689d88bb-rm8rp -o yaml
  135  kubectl get pod nginx-deployment-5c689d88bb-rm8rp -o yaml | grep nnota
  136  kubectl get deployment
  137  kubectl get deployment nginx-deployment -o yaml
  138  kubectl get deployments --show-labels
  139  kubectl get deployments --field-selector
  140  kubectl get pods --field-selector
  141  kubectl describe pod nginx
  142  kubectl get  pod nginx -o yaml
  143  kubectl get  pod nginx -o yaml | grep status
  144  kubectl get  pod nginx -o yaml | grep Running
  145  kubectl get  pod nginx -o yaml | grep status.phase
  146  kubectl get pods -o wide 
  147  kubectl get services 
  148  cd Kubernetes-practice/cka/
  149  vi service.yml
  150  kubectl create -f service.yml 
  151  cat << EOF | kubectl create -f -
  152  apiVersion: v1
  153  kind: Pod
  154  metadata:
  155    name: busybox
  156  spec:
  157    containers:
  158    - name: busybox
  159      image: radial/busyboxplus:curl
  160      args:
  161      - sleep
  162      - "1000"
  163  EOF
  164  kubectl get services
  165  kubectl get pods 
  166  curl localhost: 30080
  167  curl localhost:30080
  168  kubectl get pods -o wide
  169  kubectl get services
  170  kubectl get servces
  171  kubectl get services
  172  kubectl exec busybox -- curl 10.99.127.19
  173  cd
  174  ssh cloud_user@34.229.222.225
  175  kubectl exec busybox -- curl 10.99.127.19
  176  kubectl get node -o wide
  177  kubectl describe nodes saineel142c.mylabserver.com
  178  kubectl describe nodes saineel142c.mylabserver.com | grep [zZ[one
  179  kubectl describe nodes saineel142c.mylabserver.com | grep [zZ]one
  180  kubectl get nodes saineel142c.mylabserver.com -o yaml | grep [zZ]one
  181  kubectl get nodes saineel142c.mylabserver.com -o yaml 
  182  kubectl get pods
  183  kubectl get pods busybox -o yaml | grep [zZ]one
  184  kubectl describe pods busybox -o yaml | grep [zZ]one
  185  kubectl describe pods busybox -o wide | grep [zZ]one
  186  kubectl describe pod busybox -o wide | grep [zZ]one
  187  kubectl describe pods busybox | grep [zZ]one
  188  kubectl get nodes --show-labels
  189  kubectl get nodes --show-labels | grep aws 
  190  kubectl get pods -L
  191  kubectl get pods -L app
  192  kubectl get pods -L app -o wide
  193  kubectl get pods --field-selector status.phase=Running
  194  kubectl get statefulsets,services --field-selector metadata.namespace!=default
  195  kubectl get statefulsets,services,pods --field-selector metadata.namespace!=default
  196  kubectl get statefulsets,services,pods --field-selector metadata.namespace!=default,--field-selector status.phase=Running
  197  kubectl get statefulsets,services,pods --field-selector metadata.namespace!=default,status.phase=Running
  198  kubectl get statefulsets,services,pods --field-selector status.phase=Running
  199  kubectl get services --field-selector metadata.namespace!=default
  200  kubectl get pods --field-selector=status.phase!=Running,spec.restartPolicy=Always
  201  kubectl get pods,deployments
  202  echo "" | kubectl get pods,deployments
  203  echo ""
  204  echo "*********" | kubectl get pods,deployments
  205  kubectl run nginx --image nginx
  206  kubectl get pods
  207  kubectl create deployment nginx --image nginx
  208  kubectl get deplyments 
  209  kubectl get deplyoments 
  210  kubectl get deployments 
  211  kubectl delete deployment nginx
  212  kubectl create deployment nginx --image nginx
  213  kubectl get deployments 
  214  kubectl get deployment nginx - o yaml 
  215  kubectl get deployment nginx -o yaml 
  216  kubectl get deployment nginx -o yaml | grep [Rr]eplica
  217  kubectl get deployments 
  218  kubectl get deployment nginx-deployment -o yaml | grep [Rr]eplica
  219  ls
  220  cd Kubernetes-practice/
  221  cd cka/
  222  curl head http://127.0.0.1:8081
  223  cd
  224  kubectl get pods
  225  kubectl get deployments
  226  kubectl cluster-info
  227  kubectl cluster-info dump
  228  kubectl cluster-info dump | grep pod
  229  cat .kube/config | more
  230   kubectl get secrets
  231  kubectl create ns my-ns
  232  kubectl run test --image=chadmcrowell/kubectl-proxy -n my-ns
  233  kubectl get pods -n my-ns
  234  kubectl exec -it <name-of-pod> -n my-ns sh
  235  kubectl exec -it test-6d5fb489c-7zs7v. -n my-ns sh
  236  kubectl exec -it test-6d5fb489c-7zs7v -n my-ns sh
  237  kubectl get pods
  238  kubectl get deployments
  239  kubectl get pods
  240  kubectl port-forward nginx-first 8081:90
  241  kubectl port-forward nginx-first 8081:80
  242  kubectl get pods
  243  kubectl logs nginx-first
  244  kubectl exwc it nginx-first -- ls
  245  kubectl exec -it nginx-first -- ls
  246  kubectl exec -it nginx-first -- uname -a
  247  kubectl exec -it nginx-first -- uname
  248  kubectl get deployments
  249  kubectl expose deployment nginx --port 80 --type NodePort expose
  250  kubectl expose deployment nginx --port 80 --type NodePort
  251  kubectl expose deployment ngin --port 80 --type NodePort
  252  kubectl delete deplyment nginx
  253  kubectl delete deployment nginx
  254  kubectl expose deployment nginx --port 80 --type NodePort
  255  kubectl get deplyments
  256  kubectl get deployments
  257  kubectl get services 
  258  kubectl describe nodes
  259  kubectl describe nodes | grep [cC]ondition 
  260  kubectl describe nodes | grep Condition 
  261  kubectl get pods -o wide 
  262  kubectl drain nginx-first --ignore-daemonsets
  263  kubectl drain saineel142c.mylabserver.com --ignore-daemonsets
  264  kubectl get pods -o wide 
  265  kubectl drain saineel143c.mylabserver.com --ignore-daemonsets
  266  kubectl get pods
  267  kubectl get pods -o wide
  268  wget https://github.com/etcd-io/etcd/releases/download/v3.3.12/etcd-v3.3.12-linux-amd64.tar.gz
  269  tar xvf etcd-v3.3.12-linux-amd64.tar.gz
  270  sudo mv etcd-v3.3.12-linux-amd64/etcd* /usr/local/bin
  271  sudo ETCDCTL_API=3 etcdctl snapshot save snapshot.db --cacert /etc/kubernetes/pki/etcd/server.crt --cert /etc/kubernetes/pki/etcd/ca.crt --key /etc/kubernetes/pki/etcd/ca.key
  272  ls
  273  cd /etc/kubernetes/pki/etcd/
  274  ls
  275  ll
  276  cd
  277  ifconfig 
  278  kubectl get pods
  279  kubectl get pods -o wide 
  280  ssh saineel143c.mylabserver.com
  281  kubectl get enspoints
  282  kubectl get endpoints
  283  kubectl scale deployment/
  284  kubectl get deployments
  285  kubectl scale deployment/nginx-deployment --replicas=3
  286  kubectl get pods
  287  kubectl scale deployment/nginx-deployment --replicas=30
  288  kubectl get pods
  289  kubectl scale deployment/nginx-deployment --replicas=3
  290  kubectl get pods
  291  kubectl get pods -o wide 
  292  kubeadm --help
  293  ls
  294  git status 
  295  cd Kubernetes-practice/
  296  git add *
  297  git status 
  298  git commit -m" adding file service.yml"
  299  git push
  300  cd
  301  ls
  302  kubectl get ns
  303  kubectl get namespaces 
  304  kubectl --namespace=my-ns get pods
  305  kubectl --namespace=default get pods
  306  cd
  307  kubectl --namespace=default get pods
  308  kubectl get nodes - o wide 
  309  kubectl get nodes -o wide 
  310  kubectl exec -it nginx-first -- ls
  311  ls
  312  ssh saineel142c.mylabserver.com
  313  cd
  314  kubectl get pods
  315  kubectl get pods -o yaml
  316  kubectl get pods -o yaml | grep selector
  317  kubectl get pods
  318  kubectl get pod nginx-deployment-5c689d88bb-jh8jn -o yaml
  319  kubectl get pod nginx-deployment-5c689d88bb-jh8jn -o yaml | grep selector
  320  ls
  321  cd Kubernetes-practice/
  322  ls
  323  ls | grep -R selector
  324  ls
  325  ls | grep *yml | grep selector
  326  ls | grep *yml
  327  ls | grep yml
  328  ls | grep yml | grep -R selector
  329  ls | grep yml | grep l
  330  ls | grep -R selector
  331  ls | grep -R field-selector
  332  kubectl get pods --field-selector=Running
  333  kubectl get pods --field-selector status.phase=Running
  334  kubectl get services --field-selector metadata.namespace!=default
  335  kubectl get services
  336  kubectl get services --field-selector metadata.namespace=default
  337  kubectl describe services nginx - o yaml | grep metadata.namespace
  338  kubectl describe service nginx - o yaml | grep metadata.namespace
  339  kubectl describe service nginx
  340  kubectl describe service nginx -o widr
  341  kubectl describe service nginx -o wide
  342  kubectl get service nginx -o wide
  343  kubectl get service nginx - o yaml | grep metadata.namespace
  344  kubectl get service nginx -o yaml
  345  kubectl get service nginx -o yaml | grep metadata.namespace
  346  kubectl describe service nginx -o yaml | grep metadata.namespace
  347  kubectl get statefulsets,services --field-selector metadata.namespace!=default
  348  kubectl get statefulsets,services --field-selector metadata.namespace=default
  349  kubectl get statefulsets
  350  kubectl scale deployment/nginx-deployment --replicas=3
  351  kubectl get pods
  352  kubectl delete pod/busybox
  353  kubectl get pods
  354  kubectl scle -h
  355  kubectl label -h
  356  kubectl label -h | less
  357  kubectl get nodes --show-labels | grep aws 
  358  kubectl get nodes --show-labels
  359  kubectl logs nginx-first
  360  history | grep logs
  361  history 
  362  cd
  363  kubectl get pods
  364  kubectl logs ${POD_NAME} ${CONTAINER_NAME}
  365  kubectl logs nginx-first
  366  docker ps
  367  sudo docker ps
  368  sudo docker ps | grep nginx-first
  369  kubectl get pods -o wide
  370  ssh 
  371  kubectl get pods -o wide
  372  ssh saineel142c.mylabserver.com
  373  ssh saineel143c.mylabserver.com
  374  ls
  375  history 
  376  kubectl get pods
  377  kubectl describe pod nginx-first
  378  kubectl get pods
  379  kubectl get pods -o wide
  380  kubectl get logs nginx-first f974c048526d
  381  kubectl logs nginx-first f974c048526d
  382  kubectl logs nginx-first 
  383  kubectl logs nginx f974c048526d
  384  kubectl logs nginx-first f974c048526db5b29857318489b69954a6e49a9cebd2595afa131ae9aee2d7e5
  385  ls
  386  kubectl create --edit -f /tmp/srv.yaml
  387  kubectl get nodes 
  388  history 
  389   kubectl drain saineel143c.mylabserver.com --ignore-daemonsets
  390  history 
  391  kubectl get nodes 
  392  kubectl uncordon saineel142c.mylabserver.com
  393  kubectl get nodes 
  394  kubectl uncordon saineel143c.mylabserver.com
  395  ks
  396  ls
  397  kubectl get nodes 
  398  kubectl get nodes -o wide
  399  kubectl describe node saineel142c.mylabserver.com
  400  kubectl get nodes 
  401  kubectl describe node saineel142c.mylabserver.com | grep [Cc}ondition 
  402  kubectl describe node saineel142c.mylabserver.com | grep [Cc]ondition 
  403  kubectl describe node saineel142c.mylabserver.com
  404  cd Kubernetes-practice/
  405  ls
  406  cd cka/
  407  ls
  408  vi resource-reserver.yml
  409  kubectl -h
  410  kubectl apply -f resource-reserver.yml 
  411  kubectl get pods
  412  kubectl describe pod resource-reserver
  413  kubectl exec -it test-6d5fb489c-7zs7v -n my-ns sh
  414  cd
  415  cd Kubernetes-practice/
  416  git add *
  417  git status 
  418  git commit -m " adding a pod file for specific RAM and CPU"
  419  git push 
  420  cd
  421  kubectl decribe node 
  422  kubectl decribe node saineel142c.mylabserver.com
  423  kubectl describe node saineel142c.mylabserver.com
  424  echo "********************************************************************"
  425  kubectl describe node saineel142c.mylabserver.com
  426  kubectl describe node saineel142c.mylabserver.com| grep [Pp]eriod
  427  kubectl list
  428  cd Kubernetes-practice/cka/
  429  ls
  430  hostname
  431  cd
  432  kubectl get pods
  433  kubectl describe pod nginx | grep [hH]ook
  434  kubectl describe pod nginx
  435  cd Kubernetes-practice/cka/
  436  ls
  437  mkdir pod_overview
  438  ls
  439  rm pod_overview/
  440  rm -rf pod_overview/
  441  mkdir pods
  442  ls
  443  cd Kubernetes-practice/cka/pods/
  444  ls
  445  vi firstpod.yml
  446  kubectl apply -f firstpod.yml 
  447  kubectl get pods
  448  vi firstpod.yml
  449  kubectl apply -f firstpod.yml 
  450  vi firstpod.yml
  451  kubectl apply -f firstpod.yml 
  452  kubectl get pods
  453  kubectl delete pod myapp-pod
  454  kubectl apply -f firstpod.yml 
  455  kubectl get pods
  456  history > Kubernetes-practice/practice/5_8_commands.txt
    1  exit
    2  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    3  sudo add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
    4     $(lsb_release -cs) \
    5     stable"
    6  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    7  cat << EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
    8  deb https://apt.kubernetes.io/ kubernetes-xenial main
    9  EOF
   10  sudo apt-get update
   11  sudo apt-get install -y docker-ce=18.06.1~ce~3-0~ubuntu kubelet=1.12.2-00 kubeadm=1.12.2-00 kubectl=1.12.2-00
   12  sudo apt-mark hold docker-ce kubelet kubeadm kubectl
   13  echo "net.bridge.bridge-nf-call-iptables=1" | sudo tee -a /etc/sysctl.conf
   14  sudo sysctl -p
   15  sudo kubeadm init --pod-network-cidr=10.244.0.0/16
   16  mkdir -p $HOME/.kube
   17  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   18  sudo chown $(id -u):$(id -g) $HOME/.kube/config
   19  kubectl get nodes
   20  kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/bc79dd1505b0c8681ece4de4c0d86c5cd2643275/Documentation/kube-flannel.yml
   21  kubectl get nodes
   22  kubectl get pods
   23  kubectl get pods --all-namespaces 
   24  kubectl get nodes
   25  kubectl get nodes -o wide
   26  kubectl get --help
   27  kubectl get deploments
   28  kubectl get deployments
   29  kubectl get pods --all-namespaces 
   30  kubectl get pods
   31  kubectl get nodes
   32  kubectl get pods --all-namespaces 
   33  kubectl get nodes
   34  kubectl get deploments 
   35  kubectl get deployments 
   36  kubectl get --help
   37  kubectl get sc
   38  kubectl get sc -o wide 
   39  kubectl get nodes -o wide
   40  kubectl get nodes -o yaml > tp.yml
   41  ls
   42  cat tp.yml 
   43  kubectl get ns
   44  cat << EOF | kubectl create -f -
   45  kubectl get pods
   46  kubectl get pods -o wide
   47  kubectl describe pod nginx
   48  kubectl get pod -o yaml >> firstpod.yml
   49  ls
   50  cat firstpod.yml 
   51  kubectl get pod -o yaml
   52  cat firstpod.yml 
   53  kubectl describe pod nginx | grep name
   54  kubectl describe pod nginx 
   55  kubectl get pod rc
   56  kubectl get rc
   57  kubectl get deployments
   58  vi firstdeplyment.yml
   59  kubectl create -f firstdeplyment.yml 
   60  vi firstdeplyment.yml
   61  kubectl create -f firstdeplyment.yml 
   62  kubectl get deployments
   63  kubectl get deployments -o wide
   64  kubectl get rc
   65  vi firstdeplyment.yml
   66  kubectl get rc
   67  kubectl get deployments
   68  kubectl describe deploment nginx-deployment
   69  kubectl describe deployment nginx-deployment
   70  kubectl describe deploment nginx-deployment
   71  kubectl get deployments
   72  kubectl get nodes
   73  kubectl describe node saineel143c.mylabserver.com
   74  kubectl describe node saineel143c.mylabserver.com | grep tname-over
   75  kubectl describe node saineel143c.mylabserver.com | grep [Hh]ost
   76  kubectl get pods --all-namespaces 
   77  kubectl get componentstatus 
   78  sudo apt-get install git
   79  sudo apt autoremove
   80  sudo apt-get install git
   81  git clone https://github.com/saurjain108/Kubernetes-practice.git
   82  ls
   83  cd Kubernetes-practice/
   84  ls
   85  git add *
   86  git status 
   87  ls
   88  cd practice/
   89  ls
   90  cat replicationcontroller.yml 
   91  cd
   92  cd Kubernetes-practice/
   93  ls
   94  mkdir cka
   95  cd cka/
   96  ls
   97  touch firstpod.yml
   98  vi firstpod.yml 
   99  kubectl create -f firstpod.yml 
  100  cd
  101  kubectl get pods
  102  kubectl get deployment
  103  kubectl get deployment -o wide 
  104  kubectl describe deployment nginx-deployment | grep [pP]od
  105  kubectl describe deployment nginx-deployment
  106  kubectl describe deployment nginx-deployment | grep [nN]ode
  107  cd Kubernetes-practice/
  108  git add *
  109  git status 
  110  git commit -m "adding a directory of cks"
  111  git config --global user.email "you@example.com"
  112  git config --global user.email "rony.jain108@gmail.com"
  113  git config --global user.name "Raunak Jain"
  114  git commit -m "adding a directory of cks"
  115  git push 
  116  cd
  117  kubectl get componentstatus 
  118  kubectl get pods --show;labe;s
  119  kubectl get pods --show-labes
  120  kubectl get pods --show-labels
  121  kubectl get deployment --show-labels
  122  kubectl get pods nginx env=prod
  123  kubectl label pods nginx env=prod
  124  kubectl get pods --show-labels
  125  kubectl get pods -L env
  126  kubectl get pods
  127  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp
  128  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp | grep [Ss]elect
  129  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp | grep field
  130  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp | grep label
  131  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp -o yaml
  132  kubectl get pod nginx-deployment-5c689d88bb-rm8rp -o yaml
  133  kubectl get pod nginx-deployment-5c689d88bb-rm8rp -o yaml | grep label
  134  kubectl get pod nginx-deployment-5c689d88bb-rm8rp -o yaml
  135  kubectl get pod nginx-deployment-5c689d88bb-rm8rp -o yaml | grep nnota
  136  kubectl get deployment
  137  kubectl get deployment nginx-deployment -o yaml
  138  kubectl get deployments --show-labels
  139  kubectl get deployments --field-selector
  140  kubectl get pods --field-selector
  141  kubectl describe pod nginx
  142  kubectl get  pod nginx -o yaml
  143  kubectl get  pod nginx -o yaml | grep status
  144  kubectl get  pod nginx -o yaml | grep Running
  145  kubectl get  pod nginx -o yaml | grep status.phase
  146  kubectl get pods -o wide 
  147  kubectl get services 
  148  cd Kubernetes-practice/cka/
  149  vi service.yml
  150  kubectl create -f service.yml 
  151  cat << EOF | kubectl create -f -
  152  apiVersion: v1
  153  kind: Pod
  154  metadata:
  155    name: busybox
  156  spec:
  157    containers:
  158    - name: busybox
  159      image: radial/busyboxplus:curl
  160      args:
  161      - sleep
  162      - "1000"
  163  EOF
  164  kubectl get services
  165  kubectl get pods 
  166  curl localhost: 30080
  167  curl localhost:30080
  168  kubectl get pods -o wide
  169  kubectl get services
  170  kubectl get servces
  171  kubectl get services
  172  kubectl exec busybox -- curl 10.99.127.19
  173  cd
  174  ssh cloud_user@34.229.222.225
  175  kubectl exec busybox -- curl 10.99.127.19
  176  kubectl get node -o wide
  177  kubectl describe nodes saineel142c.mylabserver.com
  178  kubectl describe nodes saineel142c.mylabserver.com | grep [zZ[one
  179  kubectl describe nodes saineel142c.mylabserver.com | grep [zZ]one
  180  kubectl get nodes saineel142c.mylabserver.com -o yaml | grep [zZ]one
  181  kubectl get nodes saineel142c.mylabserver.com -o yaml 
  182  kubectl get pods
  183  kubectl get pods busybox -o yaml | grep [zZ]one
  184  kubectl describe pods busybox -o yaml | grep [zZ]one
  185  kubectl describe pods busybox -o wide | grep [zZ]one
  186  kubectl describe pod busybox -o wide | grep [zZ]one
  187  kubectl describe pods busybox | grep [zZ]one
  188  kubectl get nodes --show-labels
  189  kubectl get nodes --show-labels | grep aws 
  190  kubectl get pods -L
  191  kubectl get pods -L app
  192  kubectl get pods -L app -o wide
  193  kubectl get pods --field-selector status.phase=Running
  194  kubectl get statefulsets,services --field-selector metadata.namespace!=default
  195  kubectl get statefulsets,services,pods --field-selector metadata.namespace!=default
  196  kubectl get statefulsets,services,pods --field-selector metadata.namespace!=default,--field-selector status.phase=Running
  197  kubectl get statefulsets,services,pods --field-selector metadata.namespace!=default,status.phase=Running
  198  kubectl get statefulsets,services,pods --field-selector status.phase=Running
  199  kubectl get services --field-selector metadata.namespace!=default
  200  kubectl get pods --field-selector=status.phase!=Running,spec.restartPolicy=Always
  201  kubectl get pods,deployments
  202  echo "" | kubectl get pods,deployments
  203  echo ""
  204  echo "*********" | kubectl get pods,deployments
  205  kubectl run nginx --image nginx
  206  kubectl get pods
  207  kubectl create deployment nginx --image nginx
  208  kubectl get deplyments 
  209  kubectl get deplyoments 
  210  kubectl get deployments 
  211  kubectl delete deployment nginx
  212  kubectl create deployment nginx --image nginx
  213  kubectl get deployments 
  214  kubectl get deployment nginx - o yaml 
  215  kubectl get deployment nginx -o yaml 
  216  kubectl get deployment nginx -o yaml | grep [Rr]eplica
  217  kubectl get deployments 
  218  kubectl get deployment nginx-deployment -o yaml | grep [Rr]eplica
  219  ls
  220  cd Kubernetes-practice/
  221  cd cka/
  222  curl head http://127.0.0.1:8081
  223  cd
  224  kubectl get pods
  225  kubectl get deployments
  226  kubectl cluster-info
  227  kubectl cluster-info dump
  228  kubectl cluster-info dump | grep pod
  229  cat .kube/config | more
  230   kubectl get secrets
  231  kubectl create ns my-ns
  232  kubectl run test --image=chadmcrowell/kubectl-proxy -n my-ns
  233  kubectl get pods -n my-ns
  234  kubectl exec -it <name-of-pod> -n my-ns sh
  235  kubectl exec -it test-6d5fb489c-7zs7v. -n my-ns sh
  236  kubectl exec -it test-6d5fb489c-7zs7v -n my-ns sh
  237  kubectl get pods
  238  kubectl get deployments
  239  kubectl get pods
  240  kubectl port-forward nginx-first 8081:90
  241  kubectl port-forward nginx-first 8081:80
  242  kubectl get pods
  243  kubectl logs nginx-first
  244  kubectl exwc it nginx-first -- ls
  245  kubectl exec -it nginx-first -- ls
  246  kubectl exec -it nginx-first -- uname -a
  247  kubectl exec -it nginx-first -- uname
  248  kubectl get deployments
  249  kubectl expose deployment nginx --port 80 --type NodePort expose
  250  kubectl expose deployment nginx --port 80 --type NodePort
  251  kubectl expose deployment ngin --port 80 --type NodePort
  252  kubectl delete deplyment nginx
  253  kubectl delete deployment nginx
  254  kubectl expose deployment nginx --port 80 --type NodePort
  255  kubectl get deplyments
  256  kubectl get deployments
  257  kubectl get services 
  258  kubectl describe nodes
  259  kubectl describe nodes | grep [cC]ondition 
  260  kubectl describe nodes | grep Condition 
  261  kubectl get pods -o wide 
  262  kubectl drain nginx-first --ignore-daemonsets
  263  kubectl drain saineel142c.mylabserver.com --ignore-daemonsets
  264  kubectl get pods -o wide 
  265  kubectl drain saineel143c.mylabserver.com --ignore-daemonsets
  266  kubectl get pods
  267  kubectl get pods -o wide
  268  wget https://github.com/etcd-io/etcd/releases/download/v3.3.12/etcd-v3.3.12-linux-amd64.tar.gz
  269  tar xvf etcd-v3.3.12-linux-amd64.tar.gz
  270  sudo mv etcd-v3.3.12-linux-amd64/etcd* /usr/local/bin
  271  sudo ETCDCTL_API=3 etcdctl snapshot save snapshot.db --cacert /etc/kubernetes/pki/etcd/server.crt --cert /etc/kubernetes/pki/etcd/ca.crt --key /etc/kubernetes/pki/etcd/ca.key
  272  ls
  273  cd /etc/kubernetes/pki/etcd/
  274  ls
  275  ll
  276  cd
  277  ifconfig 
  278  kubectl get pods
  279  kubectl get pods -o wide 
  280  ssh saineel143c.mylabserver.com
  281  kubectl get enspoints
  282  kubectl get endpoints
  283  kubectl scale deployment/
  284  kubectl get deployments
  285  kubectl scale deployment/nginx-deployment --replicas=3
  286  kubectl get pods
  287  kubectl scale deployment/nginx-deployment --replicas=30
  288  kubectl get pods
  289  kubectl scale deployment/nginx-deployment --replicas=3
  290  kubectl get pods
  291  kubectl get pods -o wide 
  292  kubeadm --help
  293  ls
  294  git status 
  295  cd Kubernetes-practice/
  296  git add *
  297  git status 
  298  git commit -m" adding file service.yml"
  299  git push
  300  cd
  301  ls
  302  kubectl get ns
  303  kubectl get namespaces 
  304  kubectl --namespace=my-ns get pods
  305  kubectl --namespace=default get pods
  306  cd
  307  kubectl --namespace=default get pods
  308  kubectl get nodes - o wide 
  309  kubectl get nodes -o wide 
  310  kubectl exec -it nginx-first -- ls
  311  ls
  312  ssh saineel142c.mylabserver.com
  313  cd
  314  kubectl get pods
  315  kubectl get pods -o yaml
  316  kubectl get pods -o yaml | grep selector
  317  kubectl get pods
  318  kubectl get pod nginx-deployment-5c689d88bb-jh8jn -o yaml
  319  kubectl get pod nginx-deployment-5c689d88bb-jh8jn -o yaml | grep selector
  320  ls
  321  cd Kubernetes-practice/
  322  ls
  323  ls | grep -R selector
  324  ls
  325  ls | grep *yml | grep selector
  326  ls | grep *yml
  327  ls | grep yml
  328  ls | grep yml | grep -R selector
  329  ls | grep yml | grep l
  330  ls | grep -R selector
  331  ls | grep -R field-selector
  332  kubectl get pods --field-selector=Running
  333  kubectl get pods --field-selector status.phase=Running
  334  kubectl get services --field-selector metadata.namespace!=default
  335  kubectl get services
  336  kubectl get services --field-selector metadata.namespace=default
  337  kubectl describe services nginx - o yaml | grep metadata.namespace
  338  kubectl describe service nginx - o yaml | grep metadata.namespace
  339  kubectl describe service nginx
  340  kubectl describe service nginx -o widr
  341  kubectl describe service nginx -o wide
  342  kubectl get service nginx -o wide
  343  kubectl get service nginx - o yaml | grep metadata.namespace
  344  kubectl get service nginx -o yaml
  345  kubectl get service nginx -o yaml | grep metadata.namespace
  346  kubectl describe service nginx -o yaml | grep metadata.namespace
  347  kubectl get statefulsets,services --field-selector metadata.namespace!=default
  348  kubectl get statefulsets,services --field-selector metadata.namespace=default
  349  kubectl get statefulsets
  350  kubectl scale deployment/nginx-deployment --replicas=3
  351  kubectl get pods
  352  kubectl delete pod/busybox
  353  kubectl get pods
  354  kubectl scle -h
  355  kubectl label -h
  356  kubectl label -h | less
  357  kubectl get nodes --show-labels | grep aws 
  358  kubectl get nodes --show-labels
  359  kubectl logs nginx-first
  360  history | grep logs
  361  history 
  362  cd
  363  kubectl get pods
  364  kubectl logs ${POD_NAME} ${CONTAINER_NAME}
  365  kubectl logs nginx-first
  366  docker ps
  367  sudo docker ps
  368  sudo docker ps | grep nginx-first
  369  kubectl get pods -o wide
  370  ssh 
  371  kubectl get pods -o wide
  372  ssh saineel142c.mylabserver.com
  373  ssh saineel143c.mylabserver.com
  374  ls
  375  history 
  376  kubectl get pods
  377  kubectl describe pod nginx-first
  378  kubectl get pods
  379  kubectl get pods -o wide
  380  kubectl get logs nginx-first f974c048526d
  381  kubectl logs nginx-first f974c048526d
  382  kubectl logs nginx-first 
  383  kubectl logs nginx f974c048526d
  384  kubectl logs nginx-first f974c048526db5b29857318489b69954a6e49a9cebd2595afa131ae9aee2d7e5
  385  ls
  386  kubectl create --edit -f /tmp/srv.yaml
  387  kubectl get nodes 
  388  history 
  389   kubectl drain saineel143c.mylabserver.com --ignore-daemonsets
  390  history 
  391  kubectl get nodes 
  392  kubectl uncordon saineel142c.mylabserver.com
  393  kubectl get nodes 
  394  kubectl uncordon saineel143c.mylabserver.com
  395  ks
  396  ls
  397  kubectl get nodes 
  398  kubectl get nodes -o wide
  399  kubectl describe node saineel142c.mylabserver.com
  400  kubectl get nodes 
  401  kubectl describe node saineel142c.mylabserver.com | grep [Cc}ondition 
  402  kubectl describe node saineel142c.mylabserver.com | grep [Cc]ondition 
  403  kubectl describe node saineel142c.mylabserver.com
  404  cd Kubernetes-practice/
  405  ls
  406  cd cka/
  407  ls
  408  vi resource-reserver.yml
  409  kubectl -h
  410  kubectl apply -f resource-reserver.yml 
  411  kubectl get pods
  412  kubectl describe pod resource-reserver
  413  kubectl exec -it test-6d5fb489c-7zs7v -n my-ns sh
  414  cd
  415  cd Kubernetes-practice/
  416  git add *
  417  git status 
  418  git commit -m " adding a pod file for specific RAM and CPU"
  419  git push 
  420  cd
  421  kubectl decribe node 
  422  kubectl decribe node saineel142c.mylabserver.com
  423  kubectl describe node saineel142c.mylabserver.com
  424  echo "********************************************************************"
  425  kubectl describe node saineel142c.mylabserver.com
  426  kubectl describe node saineel142c.mylabserver.com| grep [Pp]eriod
  427  kubectl list
  428  cd Kubernetes-practice/cka/
  429  ls
  430  hostname
  431  cd
  432  kubectl get pods
  433  kubectl describe pod nginx | grep [hH]ook
  434  kubectl describe pod nginx
  435  cd Kubernetes-practice/cka/
  436  ls
  437  mkdir pod_overview
  438  ls
  439  rm pod_overview/
  440  rm -rf pod_overview/
  441  mkdir pods
  442  ls
  443  cd Kubernetes-practice/cka/pods/
  444  ls
  445  vi firstpod.yml
  446  kubectl apply -f firstpod.yml 
  447  kubectl get pods
  448  vi firstpod.yml
  449  kubectl apply -f firstpod.yml 
  450  vi firstpod.yml
  451  kubectl apply -f firstpod.yml 
  452  kubectl get pods
  453  kubectl delete pod myapp-pod
  454  kubectl apply -f firstpod.yml 
  455  kubectl get pods
  456  history > Kubernetes-practice/practice/5_8_commands.txt
  457  cd Kubernetes-practice/
  458  ls
  459  cd cka/
  460  cd ..
  461  cp practice/5_8_commands.txt ./cka/commands_5_8.txt
  462  cd ..
  463  cd Kubernetes-practice/cka/
  464  ls
  465  cat commands_5_8.txt 
  466  ls
  467  .
  468  >
  469  vi adns.yml
  470  kubectl apply -f adns.yml 
  471  kubectl get pods
  472  kubectl delete -f adns.yml 
  473  kubectl get pods
  474  kubectl describe pod nginx
  475  kubectl describe pod nginx | grep start
  476  vi spedifyinginitcontainer.yml
  477  mv spedifyinginitcontainer.yml specifyinginitcontainer.yml
  478  ls
  479  vi specifyinginitcontainer.yml 
  480  kubectl create -f specifyinginitcontainer.yml 
  481  kubectl get -f specifyinginitcontainer.yml 
  482  kubectl describe -f specifyinginitcontainer.yml 
  483  kubectl describe -f specifyinginitcontainer.yml | less
  484  kubectl get pods 
  485  docker ps
  486  sudo docker ps
  487  ls
  488  mkdir controllers
  489  cd controllers/
  490  ls ./
  491  cd ..
  492  ls
  493  cd controllers/
  494  vi firstreplicaset.yml
  495  kubectl create -f firstreplicaset.yml 
  496  vi firstreplicaset.yml
  497  kubectl create -f firstreplicaset.yml 
  498  kubectl get -f firstreplicaset.yml 
  499  kubectl describe -f firstreplicaset.yml 
  500  kubectl get pods 
  501  cat firstreplicaset.yml 
  502  cd Kubernetes-practice/cka/controllers/
  503  cat firstreplicaset.yml 
  504  kubectl get rs
  505  kubectl get rc
  506  vi firstreplicationcontroller.yml
  507  cat re
  508  cat firstreplicationcontroller.yml 
  509  cat firstreplicaset.yml 
  510  kubectl apply -f firstreplicationcontroller.yml 
  511  vi firstreplicationcontroller.yml
  512  kubectl apply -f firstreplicationcontroller.yml 
  513  get  apply -f firstreplicationcontroller.yml 
  514  kubectl get -f firstreplicationcontroller.yml 
  515  kubectl describe -f firstreplicationcontroller.yml 
  516  kubectl get pods 
  517  kubectl get nodes 
  518  kubectl describe pod nginx-1-pm6cp
  519  vi firstreplicationcontroller.yml
  520  kubectl describie rc/nginx-1
  521  kubectl describe rc/nginx-1
  522  vi firstreplicationcontroller.yml
  523  get  delete -f firstreplicationcontroller.yml 
  524  kubectl delete -f firstreplicationcontroller.yml 
  525  ls
  526  vi firstreplicationcontroller.yml 
  527  kubectl apply -f firstreplicationcontroller.yml 
  528  kubectl describe rc/nginx
  529  vi firstreplicationcontroller_2.yml 
  530  la
  531  vi firstreplicationcontroller_2.yml 
  532  kubectl apply -f firstreplicationcontroller_2.yml 
  533  vi firstreplicationcontroller_2.yml 
  534  kubectl apply -f firstreplicationcontroller_2.yml 
  535  kubectl describe rc/nginx-1
  536  cat firstreplicationcontroller.yml 
  537  car firstreplicationcontroller.yml > firstreplicationcontroller_test.yml
  538  cat firstreplicationcontroller.yml > firstreplicationcontroller_test.yml
  539  ls
  540  car firstreplicationcontroller_test.yml 
  541  vi  firstreplicationcontroller_test.yml 
  542  kubectl apply -f firstreplicationcontroller_test.yml 
  543  vi  firstreplicationcontroller_test.yml 
  544  rm firstreplicationcontroller_test.yml 
  545  kubectl get pods 
  546  kubectl describe pod nginx
  547  kubectl get pods -h
  548  kubectl get pods -h | grep [nN]ode
  549  kubectl get pods -h | less
  550  kubectl get pods --field-selector Node=saineel142c.mylabserver.com
  551  cat firstreplicaset.yml 
  552  vi firstdeployment.yml
  553  cd ..
  554  cd..
  555  cd ..
  556  git add *
  557  git staut
  558  git status 
  559  git commit -m "adding folder pod and controllers along with some sample yaml code from K8's hoomepage used for practice'
  560  git commit -m "adding folder pod and controllers along with some sample yaml code from K8's hoomepage used for practice"
  561  git push 
  562  cd cka/controllers/
  563  ls
  564  vi firstdeployment.yml 
  565  kubectl apply -f firstdeployment.yml 
  566  vi firstdeployment.yml 
  567  kubectl apply -f firstdeployment.yml 
  568  kubectl get deployments
  569  kubectl delete deployment nginx-deployment
  570  kubectl get deployments
  571  kubectl apply -f firstdeployment.yml 
  572  vi firstdeployment.yml 
  573  kubectl apply -f firstdeployment.yml 
  574  kubectl get -f firstdeployment.yml 
  575  kubectl describe -f firstdeployment.yml 
  576  kubectl get pods --show-labels
  577  kubectl get deployments
  578  kubectl rollout status deployment.v1.apps/nginx-deployment
  579  kubectl get rs
  580  kubectl -h
  581  kubectl -h | grep set 
  582  kubectl set -h | grep image 
  583  vi firstdeployment.yml 
  584  kubectl edit deployment.v1.apps/nginx-deployment
  585  kubectl rollout status deployment.v1.apps/nginx-deployment
  586  kubectl describe deployment nginx-deployment
  587  kubectl het pods
  588  kubectl get pods
  589  kubectl get deployment
  590  kubectl get rs
  591  kubectl edit deployment.v1.apps/nginx-deployment
  592  kubectl rollout status deployment.v1.apps/nginx-deployment
  593  kubectl get rs
  594  kubectl get deployment
  595  kubectl get pods
  596  kubectl describe deployment nginx-deployment
  597  kubectl get rollouts
  598  kubectl get rollout
  599  kubectl rollout -h
  600  kubectl rollout history
  601  kubectl rollout history deployment.v1.apps/nginx-deployment
  602  kubectl get rs
  603  kubectl get pods --showlabels
  604  kubectl get rs
  605  kubectl get pods --showlabel
  606  kubectl get rs
  607  kubectl get pods --show labels
  608  kubectl get pods --show-labels
  609  kubectl get rs
  610  kubectl get pods --show-labels
  611  history 
  612  history >> ../commands_5_8.txt 
    1  exit
    2  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    3  sudo add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
    4     $(lsb_release -cs) \
    5     stable"
    6  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    7  cat << EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
    8  deb https://apt.kubernetes.io/ kubernetes-xenial main
    9  EOF
   10  sudo apt-get update
   11  sudo apt-get install -y docker-ce=18.06.1~ce~3-0~ubuntu kubelet=1.12.2-00 kubeadm=1.12.2-00 kubectl=1.12.2-00
   12  sudo apt-mark hold docker-ce kubelet kubeadm kubectl
   13  echo "net.bridge.bridge-nf-call-iptables=1" | sudo tee -a /etc/sysctl.conf
   14  sudo sysctl -p
   15  sudo kubeadm init --pod-network-cidr=10.244.0.0/16
   16  mkdir -p $HOME/.kube
   17  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   18  sudo chown $(id -u):$(id -g) $HOME/.kube/config
   19  kubectl get nodes
   20  kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/bc79dd1505b0c8681ece4de4c0d86c5cd2643275/Documentation/kube-flannel.yml
   21  kubectl get nodes
   22  kubectl get pods
   23  kubectl get pods --all-namespaces 
   24  kubectl get nodes
   25  kubectl get nodes -o wide
   26  kubectl get --help
   27  kubectl get deploments
   28  kubectl get deployments
   29  kubectl get pods --all-namespaces 
   30  kubectl get pods
   31  kubectl get nodes
   32  kubectl get pods --all-namespaces 
   33  kubectl get nodes
   34  kubectl get deploments 
   35  kubectl get deployments 
   36  kubectl get --help
   37  kubectl get sc
   38  kubectl get sc -o wide 
   39  kubectl get nodes -o wide
   40  kubectl get nodes -o yaml > tp.yml
   41  ls
   42  cat tp.yml 
   43  kubectl get ns
   44  cat << EOF | kubectl create -f -
   45  kubectl get pods
   46  kubectl get pods -o wide
   47  kubectl describe pod nginx
   48  kubectl get pod -o yaml >> firstpod.yml
   49  ls
   50  cat firstpod.yml 
   51  kubectl get pod -o yaml
   52  cat firstpod.yml 
   53  kubectl describe pod nginx | grep name
   54  kubectl describe pod nginx 
   55  kubectl get pod rc
   56  kubectl get rc
   57  kubectl get deployments
   58  vi firstdeplyment.yml
   59  kubectl create -f firstdeplyment.yml 
   60  vi firstdeplyment.yml
   61  kubectl create -f firstdeplyment.yml 
   62  kubectl get deployments
   63  kubectl get deployments -o wide
   64  kubectl get rc
   65  vi firstdeplyment.yml
   66  kubectl get rc
   67  kubectl get deployments
   68  kubectl describe deploment nginx-deployment
   69  kubectl describe deployment nginx-deployment
   70  kubectl describe deploment nginx-deployment
   71  kubectl get deployments
   72  kubectl get nodes
   73  kubectl describe node saineel143c.mylabserver.com
   74  kubectl describe node saineel143c.mylabserver.com | grep tname-over
   75  kubectl describe node saineel143c.mylabserver.com | grep [Hh]ost
   76  kubectl get pods --all-namespaces 
   77  kubectl get componentstatus 
   78  sudo apt-get install git
   79  sudo apt autoremove
   80  sudo apt-get install git
   81  git clone https://github.com/saurjain108/Kubernetes-practice.git
   82  ls
   83  cd Kubernetes-practice/
   84  ls
   85  git add *
   86  git status 
   87  ls
   88  cd practice/
   89  ls
   90  cat replicationcontroller.yml 
   91  cd
   92  cd Kubernetes-practice/
   93  ls
   94  mkdir cka
   95  cd cka/
   96  ls
   97  touch firstpod.yml
   98  vi firstpod.yml 
   99  kubectl create -f firstpod.yml 
  100  cd
  101  kubectl get pods
  102  kubectl get deployment
  103  kubectl get deployment -o wide 
  104  kubectl describe deployment nginx-deployment | grep [pP]od
  105  kubectl describe deployment nginx-deployment
  106  kubectl describe deployment nginx-deployment | grep [nN]ode
  107  cd Kubernetes-practice/
  108  git add *
  109  git status 
  110  git commit -m "adding a directory of cks"
  111  git config --global user.email "you@example.com"
  112  git config --global user.email "rony.jain108@gmail.com"
  113  git config --global user.name "Raunak Jain"
  114  git commit -m "adding a directory of cks"
  115  git push 
  116  cd
  117  kubectl get componentstatus 
  118  kubectl get pods --show;labe;s
  119  kubectl get pods --show-labes
  120  kubectl get pods --show-labels
  121  kubectl get deployment --show-labels
  122  kubectl get pods nginx env=prod
  123  kubectl label pods nginx env=prod
  124  kubectl get pods --show-labels
  125  kubectl get pods -L env
  126  kubectl get pods
  127  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp
  128  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp | grep [Ss]elect
  129  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp | grep field
  130  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp | grep label
  131  kubectl describe pod nginx-deployment-5c689d88bb-rm8rp -o yaml
  132  kubectl get pod nginx-deployment-5c689d88bb-rm8rp -o yaml
  133  kubectl get pod nginx-deployment-5c689d88bb-rm8rp -o yaml | grep label
  134  kubectl get pod nginx-deployment-5c689d88bb-rm8rp -o yaml
  135  kubectl get pod nginx-deployment-5c689d88bb-rm8rp -o yaml | grep nnota
  136  kubectl get deployment
  137  kubectl get deployment nginx-deployment -o yaml
  138  kubectl get deployments --show-labels
  139  kubectl get deployments --field-selector
  140  kubectl get pods --field-selector
  141  kubectl describe pod nginx
  142  kubectl get  pod nginx -o yaml
  143  kubectl get  pod nginx -o yaml | grep status
  144  kubectl get  pod nginx -o yaml | grep Running
  145  kubectl get  pod nginx -o yaml | grep status.phase
  146  kubectl get pods -o wide 
  147  kubectl get services 
  148  cd Kubernetes-practice/cka/
  149  vi service.yml
  150  kubectl create -f service.yml 
  151  cat << EOF | kubectl create -f -
  152  apiVersion: v1
  153  kind: Pod
  154  metadata:
  155    name: busybox
  156  spec:
  157    containers:
  158    - name: busybox
  159      image: radial/busyboxplus:curl
  160      args:
  161      - sleep
  162      - "1000"
  163  EOF
  164  kubectl get services
  165  kubectl get pods 
  166  curl localhost: 30080
  167  curl localhost:30080
  168  kubectl get pods -o wide
  169  kubectl get services
  170  kubectl get servces
  171  kubectl get services
  172  kubectl exec busybox -- curl 10.99.127.19
  173  cd
  174  ssh cloud_user@34.229.222.225
  175  kubectl exec busybox -- curl 10.99.127.19
  176  kubectl get node -o wide
  177  kubectl describe nodes saineel142c.mylabserver.com
  178  kubectl describe nodes saineel142c.mylabserver.com | grep [zZ[one
  179  kubectl describe nodes saineel142c.mylabserver.com | grep [zZ]one
  180  kubectl get nodes saineel142c.mylabserver.com -o yaml | grep [zZ]one
  181  kubectl get nodes saineel142c.mylabserver.com -o yaml 
  182  kubectl get pods
  183  kubectl get pods busybox -o yaml | grep [zZ]one
  184  kubectl describe pods busybox -o yaml | grep [zZ]one
  185  kubectl describe pods busybox -o wide | grep [zZ]one
  186  kubectl describe pod busybox -o wide | grep [zZ]one
  187  kubectl describe pods busybox | grep [zZ]one
  188  kubectl get nodes --show-labels
  189  kubectl get nodes --show-labels | grep aws 
  190  kubectl get pods -L
  191  kubectl get pods -L app
  192  kubectl get pods -L app -o wide
  193  kubectl get pods --field-selector status.phase=Running
  194  kubectl get statefulsets,services --field-selector metadata.namespace!=default
  195  kubectl get statefulsets,services,pods --field-selector metadata.namespace!=default
  196  kubectl get statefulsets,services,pods --field-selector metadata.namespace!=default,--field-selector status.phase=Running
  197  kubectl get statefulsets,services,pods --field-selector metadata.namespace!=default,status.phase=Running
  198  kubectl get statefulsets,services,pods --field-selector status.phase=Running
  199  kubectl get services --field-selector metadata.namespace!=default
  200  kubectl get pods --field-selector=status.phase!=Running,spec.restartPolicy=Always
  201  kubectl get pods,deployments
  202  echo "" | kubectl get pods,deployments
  203  echo ""
  204  echo "*********" | kubectl get pods,deployments
  205  kubectl run nginx --image nginx
  206  kubectl get pods
  207  kubectl create deployment nginx --image nginx
  208  kubectl get deplyments 
  209  kubectl get deplyoments 
  210  kubectl get deployments 
  211  kubectl delete deployment nginx
  212  kubectl create deployment nginx --image nginx
  213  kubectl get deployments 
  214  kubectl get deployment nginx - o yaml 
  215  kubectl get deployment nginx -o yaml 
  216  kubectl get deployment nginx -o yaml | grep [Rr]eplica
  217  kubectl get deployments 
  218  kubectl get deployment nginx-deployment -o yaml | grep [Rr]eplica
  219  ls
  220  cd Kubernetes-practice/
  221  cd cka/
  222  curl head http://127.0.0.1:8081
  223  cd
  224  kubectl get pods
  225  kubectl get deployments
  226  kubectl cluster-info
  227  kubectl cluster-info dump
  228  kubectl cluster-info dump | grep pod
  229  cat .kube/config | more
  230   kubectl get secrets
  231  kubectl create ns my-ns
  232  kubectl run test --image=chadmcrowell/kubectl-proxy -n my-ns
  233  kubectl get pods -n my-ns
  234  kubectl exec -it <name-of-pod> -n my-ns sh
  235  kubectl exec -it test-6d5fb489c-7zs7v. -n my-ns sh
  236  kubectl exec -it test-6d5fb489c-7zs7v -n my-ns sh
  237  kubectl get pods
  238  kubectl get deployments
  239  kubectl get pods
  240  kubectl port-forward nginx-first 8081:90
  241  kubectl port-forward nginx-first 8081:80
  242  kubectl get pods
  243  kubectl logs nginx-first
  244  kubectl exwc it nginx-first -- ls
  245  kubectl exec -it nginx-first -- ls
  246  kubectl exec -it nginx-first -- uname -a
  247  kubectl exec -it nginx-first -- uname
  248  kubectl get deployments
  249  kubectl expose deployment nginx --port 80 --type NodePort expose
  250  kubectl expose deployment nginx --port 80 --type NodePort
  251  kubectl expose deployment ngin --port 80 --type NodePort
  252  kubectl delete deplyment nginx
  253  kubectl delete deployment nginx
  254  kubectl expose deployment nginx --port 80 --type NodePort
  255  kubectl get deplyments
  256  kubectl get deployments
  257  kubectl get services 
  258  kubectl describe nodes
  259  kubectl describe nodes | grep [cC]ondition 
  260  kubectl describe nodes | grep Condition 
  261  kubectl get pods -o wide 
  262  kubectl drain nginx-first --ignore-daemonsets
  263  kubectl drain saineel142c.mylabserver.com --ignore-daemonsets
  264  kubectl get pods -o wide 
  265  kubectl drain saineel143c.mylabserver.com --ignore-daemonsets
  266  kubectl get pods
  267  kubectl get pods -o wide
  268  wget https://github.com/etcd-io/etcd/releases/download/v3.3.12/etcd-v3.3.12-linux-amd64.tar.gz
  269  tar xvf etcd-v3.3.12-linux-amd64.tar.gz
  270  sudo mv etcd-v3.3.12-linux-amd64/etcd* /usr/local/bin
  271  sudo ETCDCTL_API=3 etcdctl snapshot save snapshot.db --cacert /etc/kubernetes/pki/etcd/server.crt --cert /etc/kubernetes/pki/etcd/ca.crt --key /etc/kubernetes/pki/etcd/ca.key
  272  ls
  273  cd /etc/kubernetes/pki/etcd/
  274  ls
  275  ll
  276  cd
  277  ifconfig 
  278  kubectl get pods
  279  kubectl get pods -o wide 
  280  ssh saineel143c.mylabserver.com
  281  kubectl get enspoints
  282  kubectl get endpoints
  283  kubectl scale deployment/
  284  kubectl get deployments
  285  kubectl scale deployment/nginx-deployment --replicas=3
  286  kubectl get pods
  287  kubectl scale deployment/nginx-deployment --replicas=30
  288  kubectl get pods
  289  kubectl scale deployment/nginx-deployment --replicas=3
  290  kubectl get pods
  291  kubectl get pods -o wide 
  292  kubeadm --help
  293  ls
  294  git status 
  295  cd Kubernetes-practice/
  296  git add *
  297  git status 
  298  git commit -m" adding file service.yml"
  299  git push
  300  cd
  301  ls
  302  kubectl get ns
  303  kubectl get namespaces 
  304  kubectl --namespace=my-ns get pods
  305  kubectl --namespace=default get pods
  306  cd
  307  kubectl --namespace=default get pods
  308  kubectl get nodes - o wide 
  309  kubectl get nodes -o wide 
  310  kubectl exec -it nginx-first -- ls
  311  ls
  312  ssh saineel142c.mylabserver.com
  313  cd
  314  kubectl get pods
  315  kubectl get pods -o yaml
  316  kubectl get pods -o yaml | grep selector
  317  kubectl get pods
  318  kubectl get pod nginx-deployment-5c689d88bb-jh8jn -o yaml
  319  kubectl get pod nginx-deployment-5c689d88bb-jh8jn -o yaml | grep selector
  320  ls
  321  cd Kubernetes-practice/
  322  ls
  323  ls | grep -R selector
  324  ls
  325  ls | grep *yml | grep selector
  326  ls | grep *yml
  327  ls | grep yml
  328  ls | grep yml | grep -R selector
  329  ls | grep yml | grep l
  330  ls | grep -R selector
  331  ls | grep -R field-selector
  332  kubectl get pods --field-selector=Running
  333  kubectl get pods --field-selector status.phase=Running
  334  kubectl get services --field-selector metadata.namespace!=default
  335  kubectl get services
  336  kubectl get services --field-selector metadata.namespace=default
  337  kubectl describe services nginx - o yaml | grep metadata.namespace
  338  kubectl describe service nginx - o yaml | grep metadata.namespace
  339  kubectl describe service nginx
  340  kubectl describe service nginx -o widr
  341  kubectl describe service nginx -o wide
  342  kubectl get service nginx -o wide
  343  kubectl get service nginx - o yaml | grep metadata.namespace
  344  kubectl get service nginx -o yaml
  345  kubectl get service nginx -o yaml | grep metadata.namespace
  346  kubectl describe service nginx -o yaml | grep metadata.namespace
  347  kubectl get statefulsets,services --field-selector metadata.namespace!=default
  348  kubectl get statefulsets,services --field-selector metadata.namespace=default
  349  kubectl get statefulsets
  350  kubectl scale deployment/nginx-deployment --replicas=3
  351  kubectl get pods
  352  kubectl delete pod/busybox
  353  kubectl get pods
  354  kubectl scle -h
  355  kubectl label -h
  356  kubectl label -h | less
  357  kubectl get nodes --show-labels | grep aws 
  358  kubectl get nodes --show-labels
  359  kubectl logs nginx-first
  360  history | grep logs
  361  history 
  362  cd
  363  kubectl get pods
  364  kubectl logs ${POD_NAME} ${CONTAINER_NAME}
  365  kubectl logs nginx-first
  366  docker ps
  367  sudo docker ps
  368  sudo docker ps | grep nginx-first
  369  kubectl get pods -o wide
  370  ssh 
  371  kubectl get pods -o wide
  372  ssh saineel142c.mylabserver.com
  373  ssh saineel143c.mylabserver.com
  374  ls
  375  history 
  376  kubectl get pods
  377  kubectl describe pod nginx-first
  378  kubectl get pods
  379  kubectl get pods -o wide
  380  kubectl get logs nginx-first f974c048526d
  381  kubectl logs nginx-first f974c048526d
  382  kubectl logs nginx-first 
  383  kubectl logs nginx f974c048526d
  384  kubectl logs nginx-first f974c048526db5b29857318489b69954a6e49a9cebd2595afa131ae9aee2d7e5
  385  ls
  386  kubectl create --edit -f /tmp/srv.yaml
  387  kubectl get nodes 
  388  history 
  389   kubectl drain saineel143c.mylabserver.com --ignore-daemonsets
  390  history 
  391  kubectl get nodes 
  392  kubectl uncordon saineel142c.mylabserver.com
  393  kubectl get nodes 
  394  kubectl uncordon saineel143c.mylabserver.com
  395  ks
  396  ls
  397  kubectl get nodes 
  398  kubectl get nodes -o wide
  399  kubectl describe node saineel142c.mylabserver.com
  400  kubectl get nodes 
  401  kubectl describe node saineel142c.mylabserver.com | grep [Cc}ondition 
  402  kubectl describe node saineel142c.mylabserver.com | grep [Cc]ondition 
  403  kubectl describe node saineel142c.mylabserver.com
  404  cd Kubernetes-practice/
  405  ls
  406  cd cka/
  407  ls
  408  vi resource-reserver.yml
  409  kubectl -h
  410  kubectl apply -f resource-reserver.yml 
  411  kubectl get pods
  412  kubectl describe pod resource-reserver
  413  kubectl exec -it test-6d5fb489c-7zs7v -n my-ns sh
  414  cd
  415  cd Kubernetes-practice/
  416  git add *
  417  git status 
  418  git commit -m " adding a pod file for specific RAM and CPU"
  419  git push 
  420  cd
  421  kubectl decribe node 
  422  kubectl decribe node saineel142c.mylabserver.com
  423  kubectl describe node saineel142c.mylabserver.com
  424  echo "********************************************************************"
  425  kubectl describe node saineel142c.mylabserver.com
  426  kubectl describe node saineel142c.mylabserver.com| grep [Pp]eriod
  427  kubectl list
  428  cd Kubernetes-practice/cka/
  429  ls
  430  hostname
  431  cd
  432  kubectl get pods
  433  kubectl describe pod nginx | grep [hH]ook
  434  kubectl describe pod nginx
  435  cd Kubernetes-practice/cka/
  436  ls
  437  mkdir pod_overview
  438  ls
  439  rm pod_overview/
  440  rm -rf pod_overview/
  441  mkdir pods
  442  ls
  443  cd Kubernetes-practice/cka/pods/
  444  ls
  445  vi firstpod.yml
  446  kubectl apply -f firstpod.yml 
  447  kubectl get pods
  448  vi firstpod.yml
  449  kubectl apply -f firstpod.yml 
  450  vi firstpod.yml
  451  kubectl apply -f firstpod.yml 
  452  kubectl get pods
  453  kubectl delete pod myapp-pod
  454  kubectl apply -f firstpod.yml 
  455  kubectl get pods
  456  history > Kubernetes-practice/practice/5_8_commands.txt
  457  cd Kubernetes-practice/
  458  ls
  459  cd cka/
  460  cd ..
  461  cp practice/5_8_commands.txt ./cka/commands_5_8.txt
  462  cd ..
  463  cd Kubernetes-practice/cka/
  464  ls
  465  cat commands_5_8.txt 
  466  ls
  467  .
  468  >
  469  vi adns.yml
  470  kubectl apply -f adns.yml 
  471  kubectl get pods
  472  kubectl delete -f adns.yml 
  473  kubectl get pods
  474  kubectl describe pod nginx
  475  kubectl describe pod nginx | grep start
  476  vi spedifyinginitcontainer.yml
  477  mv spedifyinginitcontainer.yml specifyinginitcontainer.yml
  478  ls
  479  vi specifyinginitcontainer.yml 
  480  kubectl create -f specifyinginitcontainer.yml 
  481  kubectl get -f specifyinginitcontainer.yml 
  482  kubectl describe -f specifyinginitcontainer.yml 
  483  kubectl describe -f specifyinginitcontainer.yml | less
  484  kubectl get pods 
  485  docker ps
  486  sudo docker ps
  487  ls
  488  mkdir controllers
  489  cd controllers/
  490  ls ./
  491  cd ..
  492  ls
  493  cd controllers/
  494  vi firstreplicaset.yml
  495  kubectl create -f firstreplicaset.yml 
  496  vi firstreplicaset.yml
  497  kubectl create -f firstreplicaset.yml 
  498  kubectl get -f firstreplicaset.yml 
  499  kubectl describe -f firstreplicaset.yml 
  500  kubectl get pods 
  501  cat firstreplicaset.yml 
  502  cd Kubernetes-practice/cka/controllers/
  503  cat firstreplicaset.yml 
  504  kubectl get rs
  505  kubectl get rc
  506  vi firstreplicationcontroller.yml
  507  cat re
  508  cat firstreplicationcontroller.yml 
  509  cat firstreplicaset.yml 
  510  kubectl apply -f firstreplicationcontroller.yml 
  511  vi firstreplicationcontroller.yml
  512  kubectl apply -f firstreplicationcontroller.yml 
  513  get  apply -f firstreplicationcontroller.yml 
  514  kubectl get -f firstreplicationcontroller.yml 
  515  kubectl describe -f firstreplicationcontroller.yml 
  516  kubectl get pods 
  517  kubectl get nodes 
  518  kubectl describe pod nginx-1-pm6cp
  519  vi firstreplicationcontroller.yml
  520  kubectl describie rc/nginx-1
  521  kubectl describe rc/nginx-1
  522  vi firstreplicationcontroller.yml
  523  get  delete -f firstreplicationcontroller.yml 
  524  kubectl delete -f firstreplicationcontroller.yml 
  525  ls
  526  vi firstreplicationcontroller.yml 
  527  kubectl apply -f firstreplicationcontroller.yml 
  528  kubectl describe rc/nginx
  529  vi firstreplicationcontroller_2.yml 
  530  la
  531  vi firstreplicationcontroller_2.yml 
  532  kubectl apply -f firstreplicationcontroller_2.yml 
  533  vi firstreplicationcontroller_2.yml 
  534  kubectl apply -f firstreplicationcontroller_2.yml 
  535  kubectl describe rc/nginx-1
  536  cat firstreplicationcontroller.yml 
  537  car firstreplicationcontroller.yml > firstreplicationcontroller_test.yml
  538  cat firstreplicationcontroller.yml > firstreplicationcontroller_test.yml
  539  ls
  540  car firstreplicationcontroller_test.yml 
  541  vi  firstreplicationcontroller_test.yml 
  542  kubectl apply -f firstreplicationcontroller_test.yml 
  543  vi  firstreplicationcontroller_test.yml 
  544  rm firstreplicationcontroller_test.yml 
  545  kubectl get pods 
  546  kubectl describe pod nginx
  547  kubectl get pods -h
  548  kubectl get pods -h | grep [nN]ode
  549  kubectl get pods -h | less
  550  kubectl get pods --field-selector Node=saineel142c.mylabserver.com
  551  cat firstreplicaset.yml 
  552  vi firstdeployment.yml
  553  cd ..
  554  cd..
  555  cd ..
  556  git add *
  557  git staut
  558  git status 
  559  git commit -m "adding folder pod and controllers along with some sample yaml code from K8's hoomepage used for practice'
  560  git commit -m "adding folder pod and controllers along with some sample yaml code from K8's hoomepage used for practice"
  561  git push 
  562  cd cka/controllers/
  563  ls
  564  vi firstdeployment.yml 
  565  kubectl apply -f firstdeployment.yml 
  566  vi firstdeployment.yml 
  567  kubectl apply -f firstdeployment.yml 
  568  kubectl get deployments
  569  kubectl delete deployment nginx-deployment
  570  kubectl get deployments
  571  kubectl apply -f firstdeployment.yml 
  572  vi firstdeployment.yml 
  573  kubectl apply -f firstdeployment.yml 
  574  kubectl get -f firstdeployment.yml 
  575  kubectl describe -f firstdeployment.yml 
  576  kubectl get pods --show-labels
  577  kubectl get deployments
  578  kubectl rollout status deployment.v1.apps/nginx-deployment
  579  kubectl get rs
  580  kubectl -h
  581  kubectl -h | grep set 
  582  kubectl set -h | grep image 
  583  vi firstdeployment.yml 
  584  kubectl edit deployment.v1.apps/nginx-deployment
  585  kubectl rollout status deployment.v1.apps/nginx-deployment
  586  kubectl describe deployment nginx-deployment
  587  kubectl het pods
  588  kubectl get pods
  589  kubectl get deployment
  590  kubectl get rs
  591  kubectl edit deployment.v1.apps/nginx-deployment
  592  kubectl rollout status deployment.v1.apps/nginx-deployment
  593  kubectl get rs
  594  kubectl get deployment
  595  kubectl get pods
  596  kubectl describe deployment nginx-deployment
  597  kubectl get rollouts
  598  kubectl get rollout
  599  kubectl rollout -h
  600  kubectl rollout history
  601  kubectl rollout history deployment.v1.apps/nginx-deployment
  602  kubectl get rs
  603  kubectl get pods --showlabels
  604  kubectl get rs
  605  kubectl get pods --showlabel
  606  kubectl get rs
  607  kubectl get pods --show labels
  608  kubectl get pods --show-labels
  609  kubectl get rs
  610  kubectl get pods --show-labels
  611  history 
  612  history >> ../commands_5_8.txt 
  613  cat ../commands_5_8.txt 
  614  kubectl describe deployment nginx-deployment
  615  kubectl rollout history deployment.v1.apps/nginx-deployment
  616  kubectl rollout undo deployment.v1.apps/nginx-deployment --to-revision=2
  617* kubectl rollout firsthistory deployment.v1.apps/nginx-deployment
  618  kubectl get rs
  619  kubectl get pods --show-labels
  620  kubectl get rs
  621  kubectl describe deployment nginx-deployment
  622  kubectl get deployment nginx-deployment
  623  kubectl get deploy
  624  kubectl scale deployment/nginx-deployment --replicas=10
  625  kubectl get deploy
  626  kubectl get rs
  627  kubectl get pods
  628  kubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80
  629  kubectl get pods
  630  kubectl describe deployment nginx-deployment
  631  kubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80
  632  kubectl get deploy
  633  kubectl get rs
  634  history >> ../commands_5_8.txt 
12804  kubectl get deployment nginx-deployment
12805  kubectl get deploy
12806  kubectl scale deployment/nginx-deployment --replicas=10
12807  kubectl get deploy
12808  kubectl get rs
12809  kubectl get pods
12810  kubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80
12811  kubectl get pods
12812  kubectl describe deployment nginx-deployment
12813  kubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80
12814  kubectl get deploy
12815  kubectl get rs
12816  history >> ../commands_5_8.txt 
12817  cd ..
12818  git add 
12819  git add *
12820  git status 
12821  kubectl rollout history deployment.v1.apps/nginx-deployment
12822  kubectl rollout history deployment.v1.apps/nginx-deployments "nginx-deploymeny"
12823  kubectl rollout history deployment.v1.apps/nginx-deployment
12824  kubectl annotate deployment.v1.apps/nginx-deployment kubernetes.io/change-cause="image updated to 1.9.1"
12825  kubectl rollout history deployment.v1.apps/nginx-deployment
12826  history 
12827  cd Kubernetes-practice/cka/controllers/cd
12828  ls
12829  git clone https://github.com/saurjain108/ansible.git
12830  ls
12831  cd ansible/
12832  ls
12833  ll
12834  ls
12835  ls playbooks/
12836  ls
12837  mkdir course
12838  cd course/
12839  cd ..
12840  git status 
12841  cd course/
12842  touch abc.txt
12843  cd ..
12844  git status 
12845  git commit -m "testing"
12846  ls
12847  mv abc.txt course/
12848  ls
12849  git status 
12850  git add *
12851  git status 
12852  git commit -m "testing"
12853  git push 
12854  cd Kubernetes-practice/cka/controllers/
12855  ls
12856  vi firststatefulset.yml
12857  kubectl apply -f firststatefulset.yml
12858  vi firststatefulset.yml
12859  kubectl apply -f firststatefulset.yml
12860  vi firststatefulset.yml
12861  kubectl apply -f firststatefulset.yml
12862  vi firststatefulset.yml
12863  kubectl apply -f firststatefulset.yml
12864  kubectl get pods
12865  kubectl autoscale deployment/nginx-deployment --min=4 --max=15 --cpu-percent=80
12866  kubectl get pods
12867  vi firststatefulset-2.yml
12868  kubectl apply -f firststatefulset-2.yml
12869  vi firststatefulset-2.yml
12870  kubectl apply -f firststatefulset-2.yml
12871  vi firststatefulset-2.yml
12872  kubectl apply -f firststatefulset-2.yml
12873  kubectl get ss
12874  kubectl get statefulset
12875  kubectl get pods
12876  kubectl delete -f firststatefulset-2.yml
12877  kubectl get -h
12878  kubectl get -h | [vV]olune
12879  kubectl get -h | [vV]olume
12880  kubectl get -h | grep [vV]olume
12881  kubectl get -h | less
12882  kubectl get persistanrvolumes
12883  kubectl get persistanrvolume
12884  kubectl get persistantvolumes
12885  kubectl get pv
12886  kubectl get volumes
12887  vi firstdaemonset.yml
12888  kubectl apply -f firstdaemonset.yml
12889  kubectl get ds
12890  kubectl get daemonset
12891  kubectl get pods
12892  kubectl get daemonsets
12893  kubectl apply -f firstdaemonset.yml
12894  kubectl get ns
12895  kubectl get services
12896  kubectl get deployment --show-labels
12897  kubectl get nodes 
12898  kubectl get nodes  -o wide 
12899  kubectl describe nodes 
12900  kubectl get nodes 
12901  kubectl describe node saineel142c.mylabserver.com | less
12902  kubectl describe node saineel143c.mylabserver.com | less
12903  kubectl get jobs
12904  vi testing_ttl.yml
12905  kubectl apply -f testing_ttl.yml
12906  vi testing_ttl.yml
12907  kubectl apply -f testing_ttl.yml
12908  kubectl get jobs
12909  ls
12910  mv testing_ttl.yml ../
12911  ls
12912  kubectl describe job for-ttl
12913  cd .., cd ..
12914  cd ..
12915  git add 8
12916  git add *
12917  git status 
12918  git commit -m "Adding daemon,deployment,stateful and ttl files and also updated commands"
12919  git push 
12920  kubectl get pods
12921  kubectl get jobs
12922  kubectl delete -f testing_ttl.yml
12923  cd cka/
12924  ls
12925  cd cka/
12926  kubectl delete -f testing_ttl.yml
12927  kubectl get pods
12928  kubectl get deply
12929  kubectl get deploy
12930  kubectl delele pod nginx-deployment-6cb79996b5-2sh4q nginx-deployment-6cb79996b5-4wtbm
12931  kubectl delete pod nginx-deployment-6cb79996b5-2sh4q nginx-deployment-6cb79996b5-4wtbm
12932  kubectl get pods
12933  cd controllers/
12934  ls
12935  cd ..
12936  kubectl apply -f testing_ttl.yml
12937  kubectl get pods
12938  kubectl logs for-ttl-pddxl
12939  cat testing_ttl.yml 
12940  vi checking-activedeadlinesecondandbackofflimit.yml
12941  kubectl apply -f checking-activedeadlinesecondandbackofflimit.yml
12942  kubectl get pods
12943  ls
12944  mv checking-activedeadlinesecondandbackofflimit.yml controllers/
12945  cat testing_ttl.yml 
12946  cd ..
12947  git status 
12948  git add *
12949  git commit -m "adding activedeadlinesecondandbackofflimit file"
12950  git push 
12951  mkdir "services,load-balancers and networking"
12952  ls
12953  rm -rf "services,load-balancers and networking"
12954  mkdir 'services,load-balancers and networking'
12955  lls
12956  ls
12957  cd services\,load-balancers\ and\ networking/
12958  ls
12959  vi firstservice.yml
12960  kubectl get services
12961  kubectl apply -f firstservice.yml
12962  vi firstservice.yml
12963  kubectl apply -f firstservice.yml
12964  vi firstservice.yml
12965  kubectl apply -f firstservice.yml
12966  vi firstservice.yml
12967  kubectl apply -f firstservice.yml
12968  vi firstservice.yml
12969  kubectl get services
12970  kubectl get services 
12971  kubectl describe service my-service
12972  vi servicewithoutselector.yml
12973  kubectl apply -f servicewithoutselector.yml 
12974  vi servicewithoutselector.yml
12975  kubectl apply -f servicewithoutselector.yml 
12976  vi servicewithoutselector.yml
12977  kubectl apply -f servicewithoutselector.yml 
12978  kubectl get services
12979  kubectl get endpoints
12980  vi firstservice.yml
12981  vi multiportservice.yml
12982  vi firstservice.yml
12983  vi multiportservice.yml
12984  kubectl apply -f multiportservice.yml 
12985  vi multiportservice.yml
12986  kubectl apply -f multiportservice.yml 
12987  kubectl get services
12988  kubectl describe service multiport-service
12989  vi multiportservice.yml
12990  vi firstservice.yml
12991  kubectl apply -f firstservice.yml
12992  cd ..
12993  ls | grep -R IP
12994  vi cd cka/
12995  cd cka/
12996  ls | grep -R IP
12997  vi firstservice.yml
12998  cd ..
12999  ls
13000  mv services\,load-balancers\ and\ networking/ cka/
13001  ls
13002  cd cka/
13003  ls
13004  ls | grep -R IP
13005  kubectl apply -f firstservice.yml
13006  cd services\,load-balancers\ and\ networking/
13007  kubectl apply -f firstservice.yml
13008  vi firstservice.yml
13009  kubectl apply -f firstservice.yml
13010  vi firstservice.yml
13011  kubectl apply -f firstservice.yml
13012  vi firstservice.yml
13013  kubectl get pods
13014  vi firstservice.yml
13015  kubectl apply -f firstservice.yml
13016  vi firstservice.yml
13017  kubectl get pods
13018  kubectl describe pod nginx
13019  kubectl describe pod nginx | grep [hH]ost
13020  cd Kubernetes-practice/cka/services\,load-balancers\ and\ networking/
13021  vi exposingpodtocluster.yml
13022  kubectl apply -f exposingpodtocluster.yml
13023  vi exposingpodtocluster.yml
13024  kubectl apply -f exposingpodtocluster.yml
13025  kubectl get pods
13026  kubectl get pods --match-label run==my-app-running
13027  kubectl get deployments --show-labels
13028  vi exposingpodtocluster.yml
13029  kubectl get pods -l run=my-app-running -o wide
13030  kubectl get pods -l run=my-app-running - o yaml | grep podID
13031  kubectl get pods -l run=my-app-running -o yaml | grep podID
13032  kubectl get pods -l run=my-app-running -o yaml
13033  kubectl get pods -l run=my-app-running -o yaml | grep pod
13034  curl 172.31.97.179
13035  ssh 172.31.97.179
13036  kubectl get services kube-dns --namespace=kube-system
13037  kubectl run curl --image=radial/busyboxplus:curl -i --tty
13038  make keys secret make keys secret KEY=/tmp/nginx.key CERT=/tmp/nginx.crt SECRET=/tmp/secret.json
13039  cd ..
13040  git status 
13041  git add *
13042  git status 
13043  git commit -m " adding service multiport service and servicewithoutselector files"
13044  git push 
13045  cd cka/services\,load-balancers\ and\ networking/
13046  vi firstingress.yml
13047  kubectl apply -f firstingress.yml
13048  kubectl get ingrss
13049  kubectl get ingress
13050  vi singleserviceingress.yml
13051  kubectl apply -f singleserviceingress.yml 
13052  kubectl describe -f singleserviceingress.yml 
13053  kubectl get ingress
13054  cd Kubernetes-practice/cka/services\,load-balancers\ and\ networking/
13055  kubectl get ingress
13056  su 
13057  cd
13058  ls
13059  git clone https://github.com/saurjain108/linux-.git
13060  ls
13061  cd ansible/
13062  ls
13063  vi README.md 
13064  cd
13065  cd ansible/
13066  ls
13067  cat command-10-9.txt 
13068   ls
13069  -m ping
13070  ping 8.8.8.8
13071  cd Kubernetes-practice/cka/services\,load-balancers\ and\ networking/
13072  ls
13073  cd ..
13074  ls
13075  ca adns.yml 
13076  cat adns.yml 
13077  ls
13078  cat resource-reserver.yml 
13079  ls
13080  cat service
13081  cat service.yml 
13082  cat firstpod.yml 
13083  cat specifyinginitcontainer.yml 
13084  ls
13085  cd controllers/
13086  l
13087  vi firstdaemonset.yml 
13088  vi firstdeployment.yml 
13089  vi firstreplicaset.yml 
13090  vi firstreplicationcontroller.yml 
13091  vi firststatefulset.yml 
13092  cd ..
13093  ls
13094  mkdir storage
13095  cd storage/ls
13096  cd storag
13097  cd storaga
13098  cd storage/
13099  ls
13100  echo $ENV
13101  ENV
13102  $ENV
13103  env
13104  cd Kubernetes-practice/cka/storage/
13105  ls
13106  vi firstpv.yml
13107  kubectl apply -f firstpv.yml
13108  vi firstpv.yml
13109  kubectl apply -f firstpv.yml
13110  kubectl get pv
13111  kubectl get pdos
13112  kubectl get pods
13113  kubectl describe pv/pv1
13114  kubectl get pv -o widw
13115  kubectl get pv -o wide
13116  vi firstpvc.yml
13117  kubectl apply -f firstpvc.yml
13118  vi claimasvolume.yml
13119  su -
13120  kubectl -f  claimasvolume.yml
13121  kubectl -f claimasvolume.yml
13122  kubectl apply -f claimasvolume.yml
13123  kubectl describe pod/claimpod
13124  vi claimasvolume.yml
13125  ls
13126  vi firstpvc.yml 
13127  kubectl get pods
13128  ls | grep claimpod
13129  ls | grep -R claimpod
13130  cat claimasvolume.yml 
13131  vi claimasvolume.yml 
13132  kubectl apply -f claimasvolume.yml
13133  kubectl apply -f claimasvolume.yml > error.txt
13134  ls
13135  cat error.txt 
13136  kubectl apply -f claimasvolume.yml >> errorr.txt
13137  ls
13138  rm error.txt 
13139  cat errorr.txt 
13140  ls > errorr.txt 
13141  ls
13142  kubectl apply -f claimasvolume.yml >> errorr.txt
13143  cat errorr.txt 
13144  ls
13145  rm errorr.txt 
13146  kubectl apply -f claimasvolume.yml >> errorr.txt
13147  kubectl delete -f claimasvolume.yml 
13148  kubectl apply -f claimasvolume.yml
13149  kubectl describe pod/claimpod
13150  ls
13151  cd Kubernetes-practice/
13152  git add *
13153  git status 
13154  git commit -m "Adding ingress, single-service-ingress, claim-volume, pv and pvc"
13155  git push 
13156  cd cka/
13157  ld
13158  mkdir configuration-best-practice
13159  ls
13160  cd configuration-best-practice/
13161  cd Kubernetes-practice/cka/configuration-best-practice/
13162  ls
13163  vi requesting-specific-memory.yml
13164  kubectl apply -f requesting-specific-memory.yml
13165  vi requesting-specific-memory.yml
13166  kubectl apply -f requesting-specific-memory.yml
13167  kubectl get pods
13168  kubectl describe frontend
13169  kubectl describe pod frontend
13170  ssh saineel142c.mylabserver.com
13171  vi requesting-specific-ephemeral-memory.yml
13172  kubectl apply -f requesting-specific-ephemeral-memory.yml
13173  kubectl get pdos
13174  kubectl get pods
13175  kubectl describe pod frontend
13176  kubectl describe pod frontend | less
13177  kubectl get pods
13178  kubectl get deployments
13179  kubectl delete deployment nginx-deployment
13180  kubectl get pods
13181  kubectl get nodes 
13182  kubectl label nodes saineel142c.mylabserver.com game=cricket
13183  vi podwithselectednode.yml
13184  kubectl apply -f  podwithselectednode.yml
13185  kubectl describe pod/fornode
13186  kubectl get pods -o wide 
13187  kubectl get nodes --show-labels
13188  kubectl taint nodes 
13189  kubectl get nodes
13190  kubectl taint nodes saineel142c.mylabserver.com food=nonveg:NoSchedule
13191  kubectl get nodes -h | grep [tT]aint
13192  kubectl get nodes -h 
13193  kubectl get nodes -h | grep show-label
13194  kubectl get nodes -h | grep taint
13195  kubectl get pods -o wide 
13196  kubectl get nodes -o wide 
13197  kubectl get nodes --show-labels
13198  kubectl taint nodes saineel142c.mylabserver.com key:NoSchedule-
13199  kubectl taint nodes saineel142c.mylabserver.com nonveg:NoSchedule-
13200  kubectl taint nodes saineel142c.mylabserver.com food:NoSchedule-
13201  kubectl taint nodes saineel142c.mylabserver.com food=nonveg:NoSchedule
13202  kubectl get labels
13203   echo -n 'admin' > ./username.txt
13204  ls
13205  cd ./
13206  cd
13207  cd ./
13208  cd Kubernetes-practice/cka/configuration-best-practice/
13209  ls
13210  cat username.txt 
13211  echo -n '1f2d1e2e67df' > ./password.txt
13212  $ kubectl create secret generic db-user-pass --from-file=./username.txt --from-file=./password.txt
13213   kubectl create secret generic db-user-pass --from-file=./username.txt --from-file=./password.txt
13214  kubectl get secrtes
13215  kubectl get secrets
13216  kubectl describe secret db-user-pass 
13217  vi creatingasecret.yml
13218  kubectl aplly -f creatingasecret.yml 
13219  kubectl apply -f creatingasecret.yml 
13220  vi creatingasecret.yml
13221  kubectl apply -f creatingasecret.yml 
13222  vi creatingasecret.yml
13223  kubectl apply -f creatingasecret.yml 
13224  kubectl create -f ./creatingasecret.yml 
13225  vi creatingasecret.yml
13226  kubectl create -f ./creatingasecret.yml 
13227  vi creatingasecret.yml
13228  kubectl create -f ./secret.yaml
13229  kubectl create -f ./creatingasecret.yml 
13230  kubectl get secrets
13231  kubectl get secret mysecret -o yaml
13232  echo 'MWYyZDFlMmU2N2Rm' | base64 --decode
13233  vi podforsecret.yml
13234  kubectl apply -f podforsecret.yml 
13235  vi podforsecret.yml
13236  kubectl apply -f podforsecret.yml 
13237  kubectl get secret 
13238  kubectl get pdos
13239  kubectl get pods
13240  kubectl describe pod-for-secret | grep secret
13241  kubectl describe pod vpod-for-secret | grep secret
13242  kubectl describe pod pod-for-secret | grep secret
13243  history 
13244  cd ..
13245  ls
13246  cat commands.txt 
13247  history >> commands.txt 
13248  l
13249  ls -l
13250  ls -lh
13251  git add *
13252  git status 
13253  whereis /foo
13254  whereis /fonts
13255  cd /etc/
13256  ls
13257  ls -l | grep foo
13258  cat podforsecret.yml
13259  cd 
13260  cd Kubernetes-practice/cka/configuration-best-practice/
13261  cat podforsecret.yml
13262  kubectl get events
13263  cd Kubernetes-practice/cka/configuration-best-practice/
13264  kubectl get events
13265  ls
13266  cat creatingasecret.yml 
13267  kubectl get secret mysecret -o yaml
13268  echo 'MWYyZDFlMmU2N2Rm' | base64 --decode
13269  ls | grep -R foo
13270  mv podforsecret.yml pod-mounts-secret-on-volume.yml
13271  ls
13272  git status 
13273  kubectl apply -f pod-mounts-secret-on-volume.yml 
13274  kubectl get pdos
13275  kubectl get pods
13276  kubectl delete -f pod-mounts-secret-on-volume.yml 
13277  kubectl get pods
13278  kubectl apply -f pod-mounts-secret-on-volume.yml 
13279  kubectl get pods
13280  kubectl apply -f pod-mounts-secret-on-volume.yml 
13281  kubectl get pods
13282  kubectl describe pod/resource-reserver
13283  kubectl describe pod resource-reserver
13284  cat pod-mounts-secret-on-volume.yml 
13285  whereis /etc
13286  kubectl get pods\
13287  kubectl get pods
13288  kubectl describe pod-for-secret
13289  kubectl describe pod pod-for-secret
13290  docker exec -it pod-for-secret
13291  docker exec -it e62b9b8c565f
13292  docker exec -it e62b9b8c565f /bin/bash
13293  sudo docker exec -it e62b9b8c565f /bin/bash
13294  cd
13295  cd Kubernetes-practice/
13296  git status 
13297  git add *
13298  git status 
13299  echo $HOME
13300  cd /home/user/.kube/
13301  ls
13302  cat config 
13303  ssh saineel143c.mylabserver.com
13304  cd /home/user/.kube/
13305  ls
13306  cat cache/
13307  cat cache/discovery/172.31.98.60_6443/certificates.k8s.io/v1beta1/serverresources.json 
13308  cd
13309  cd Kubernetes-practice/cka/
13310  cd ..
13311  git add *
13312  git status 
13313  git commit -m " adding configuration files, secret and ephemeral memory yaml files"
13314  git push 
13315  cd Kubernetes-practice/cka/
13316  mkdir policies
13317  cd policies/
13318  vi limitrange.yml
13319  kubectl create namespace limitrange-demo
13320  kubectl create -f  limitrange.yml -n limitrange-demo
13321  limitrange-demo
13322  kubectl describe limitrange/limit-mem-cpu-per-container
13323  cat  limitrange.yml
13324  kubectl describe limitrange/limit-range-for-cpu-memory
13325  kubectl get limit range
13326  kubectl get limitrange
13327  kubectl describe limitrange/limit-range-for-cpu-memory
13328  kubectl create -f limitrange.yml
13329  kubectl describe limitrange/limit-range-for-cpu-memory
13330  kubectl delete -f limitrange.yml
13331  kubectl create -f limitrange.yml --namespace=limitrange-demo
13332  kubectl get limitranges
13333  vi limitrange.yml
13334  kubectl create -f limitrange.yml --namespace=limitrange-demo
13335  kubectl describe limitrange/limit-range-for-cpu-memory2
13336  kubectl get ns
13337  kubectl config set-context $(kubectl config current-context) --namespace=limitrange-demo
13338  kubectl describe limitrange/limit-range-for-cpu-memory2
13339  kubectl create -f limitrange.yml --namespace=limitrange-demo
13340  kubectl describe limitrange/limit-range-for-cpu-memory2
13341  kubectl config current-context
13342  pod-for-testing-limitrange.yml
13343  vi pod-for-testing-limitrange.yml
13344  kubectl apply -f  pod-for-testing-limitrange.yml -n limitrange-demo
13345  kubectl describe pod/busybox-1
13346  kubectl describe pod/busybox-1 | grep space
13347  kubectl get pods
13348  kubectl get deplyoments
13349  kubectl get deployments
13350  kubectl get rs
13351  cd ..
13352  l
13353  kubectl get events
13354  ls
13355  cd cka/
13356  ls
13357  kubectl apply -f pods/
13358  kubectl apply -f controllers/
13359  kubectl get pods
13360  kubectl get events
13361  cd policies/
13362  vi limiting-pod-compute-resources.yml
13363  kubectl apply -f  limiting-pod-compute-resources.yml
13364  vi limiting-pod-compute-resources.yml
13365  kubectl apply -f  limiting-pod-compute-resources.yml
13366  vi limiting-pod-compute-resources.yml
13367  kubectl apply -f  limiting-pod-compute-resources.yml
13368  catlimiting-pod-compute-resources.yml
13369  cat limiting-pod-compute-resources.yml
13370  vi limiting-pod-compute-resources.yml
13371  kubectl apply -f  limiting-pod-compute-resources.yml
13372  vi limiting-pod-compute-resources.yml
13373  kubectl apply -f  limiting-pod-compute-resources.yml
13374  kubectl describe limitrange/limiting-pod-compute-resources
13375  vi limiting-pvc-resources
13376  mv  limiting-pvc-resources limiting-pvc-resources.yml
13377  vi limiting-pvc-resources.yml 
13378  kubectl apply -f  limiting-pvc-resources.yml 
13379  kubectl describe limitrange/storagelimits
13380  ls
13381  cat limit
13382  cat limitrange.yml 
13383  curl -LO https://storage.googleapis.com/kubernetes-release/easy-rsa/easy-rsa.tar.gz
13384  tar xzf easy-rsa.tar.gz
13385  cd easy-rsa-master/easyrsa3
13386  ./easyrsa init-pki
13387  ./easyrsa --batch "--req-cn=${MASTER_IP}@`date +%s`" build-ca nopass
13388  kubectl get pods -l app=myapp
13389  kubectl annotate pod myapp-pod description="this is testing of annotation"
13390  kubectl describe pod myapp-pod | grep annot
13391  cd
13392  cd Kubernetes-practice/cka/
13393  ls
13394  cat commands_5_8.txt 
13395  cd ..
13396  cat commands.txt 
13397  history 
13398  history >> commands.txt 
13399  git status 
13400  git add *
13401  git status 
13402  git commit -m " adding a policy files and updated the commands"
13403  git push 
13404  cd
13405  su linux
13406  kubectl get pods -Lapp
13407  kubectl get pods -L app
13408  kubectl get deployments
13409  kubectl scale deployment/nginx-deployment --replicas=7
13410  kubectl get pods
13411  kubectl logs for-ttl-pddxl
13412  kubectl logs pi-with-timeout-r7jv7
13413  kubectl logs busybox-1
13414  kubectl get pods
13415  kubectl describe pod/busybox-1
13416  cd /dev/
13417  cd
13418  su linux
13419  ls
13420  cd Kubernetes-practice/
13421  cd cka/
13422  ls
13423  history | grep apply
13424  ls
13425  kubectl delete -f controllers/
13426  kubectl delete -f pods/
13427  kubectl get pods
13428  kubectl delete -f pods/
13429  kubectl get pods
13430  kubectl delete pod busybox-1
13431  kubectl get nsa
13432  kubectl get ns
13433  kubectl delete ns my-ns limitrange-demo
13434  kubectl get rc
13435  kubectl get rs
13436  kubectl get noides
13437  kubectl get nodes
13438  kubectl version 
13439  kubectl get apiservers
13440  kubectl get apiservices 
13441  kubectl get apiservices | grep metri
13442  mkdir assign-memory-to-resources
13443  cd assign-memory-to-resources/
13444  ls
13445  kubectl create ns mem-example
13446  kubectl get ns 
13447  cd ..
13448  mv assign-memory-to-resources/ configure-pod-and-container
13449  ls
13450  cd configure-pod-and-container/
13451  ls
13452  vi assign-memory-to-pod.yml
13453  kubectl apply -f assign-memory-to-pod.yml --ns=mem-example
13454  kubectl apply -f assign-memory-to-pod.yml --namespace=mem-example
13455  vi assign-memory-to-pod.yml
13456  kubectl apply -f assign-memory-to-pod.yml --namespace=mem-example
13457  kubectl get pod/formemory --namespace=mem-example
13458  kubectl get pod/formemory -o yaml --namespace=mem-example
13459  kubectl top pod/formemory --namespace=mem-example
13460  kubectl top pod formemory --namespace=mem-example
13461  kubectl top pod formemory 
13462  kubectl top pod formemory --namespace=mem-example
13463  kubectl describe pod formemory 
13464  kubectl describe pod formemory
13465  kubectl get pod
13466  kubectl get pod --namespace=mem-example
13467  kubectl describe pod --namespace=mem-example
13468  kubectl -h | grep top
13469  kubectl top
13470  kubectl top pod formemory --namespace=mem-example
13471  kubectl top pod formemory
13472  kubectl top pod -h
13473  kubectl get apiservers
13474  kubectl version 
13475  kubectl version | grep 1.8
13476  kubectl version | grep 1.7
13477  cd
13478  kubectl create -f deploy/1.8+/
13479  git clone https://github.com/kubernetes-incubator/metrics-server.git
13480  ls
13481  cd metrics-server/
13482  kubectl cluster-info
13483  kubectl cluster-info dump
13484  kubectl cluster-info dump | grep 1.
13485  kubectl cluster-info dump | grep 1.8
13486  kubectl version
13487  kubectl create -f deploy/1.8+/
13488  kubectl top pod formemory
13489  kubectl top pod formemory --namespace=mem-example
13490  cd
13491  kubectl get pods namespace=mem-example
13492  cd Kubernetes-practice/cka/configure-pod-and-container/
13493  history 
13494  kubectl get pod --namespace=mem-example
13495  kubectl top pod formemory --namespace=mem-example
13496  history 
13497  kubectl delete -f assign-memory-to-pod.yml --namespace=mem-example
13498  kubectl get apiservices
13499  kubectl apply -f assign-memory-to-pod.yml --namespace=mem-example
13500  kubectl get pods --namespace=mem-example
13501  kubectl top pod formemory --namespace=mem-example
13502  kubectl top -h
13503  kubectl top node -h
13504  kubectl get nodes 
13505  kubectl top node saineel142c.mylabserver.com
13506  sudo shutdown -r
13507  cal
13508  date 
13509  kubectl delete -f assign-memory-to-pod.yml --namespace=mem-example
13510  cd Kubernetes-practice/cka/configure-pod-and-container/
13511  kubectl delete -f assign-memory-to-pod.yml --namespace=mem-example
13512  kubectl get apiservices
13513  kubectl apply -f assign-memory-to-pod.yml --namespace=mem-example
13514  kubectl top pod formemory --namespace=mem-example
13515  kubectl top pods --v=10
13516  vi assign-memory-to-pod.yml 
13517  kubectl apply -f assign-memory-to-pod.yml --namespace=mem-example
13518  kubectl delete -f assign-memory-to-pod.yml --namespace=mem-example
13519  kubectl apply -f assign-memory-to-pod.yml --namespace=mem-example
13520  kubectl get pods
13521  kubectl get pods --namespace=mem-example
13522  kubectl get describe pod formemory --namespace=mem-example
13523  kubectl describe pod formemory --namespace=mem-example
13524  kubectl get pods --namespace=mem-example
13525  kubectl describe nodes
13526  kubectl describe nodes | grep 00MK
13527  kubectl describe nodes | grep OOMK
13528  vi assign-memory-to-pod.yml
13529  kubectl apply -f assign-memory-to-pod.yml --namespace=mem-example
13530  kubectl describe nodes | grep OOMK
13531  kubectl apply -f assign-memory-to-pod.yml --namespace=mem-example
13532  kubectl delete -f assign-memory-to-pod.yml --namespace=mem-example
13533  kubectl apply -f assign-memory-to-pod.yml --namespace=mem-example
13534  vi assign-cpu-to-pod.yml
13535  kubectl create ns cpu-example
13536  kubectl create -f  assign-cpu-to-pod.yml --namespace=cpu-example
13537  vi assign-cpu-to-pod.yml
13538  kubectl create -f  assign-cpu-to-pod.yml --namespace=cpu-example
13539  vi assign-cpu-to-pod.yml
13540  kubectl create -f  assign-cpu-to-pod.yml --namespace=cpu-example
13541  kubectl get os
13542  kubectl get ns
13543  kubectl apply -f assign-cpu-to-pod.yml --namespace=cpu-example
13544  vi assign-cpu-to-pod.yml
13545  kubectl apply -f assign-cpu-to-pod.yml --namespace=cpu-example
13546  kubectl get pod for-cpu --namespace=cpu-example
13547  kubectl get pod forcpu --namespace=cpu-example
13548  kubectl get pod forcpu --namespace=cpu-example -o yaml
13549  kubectl get pod forcpu --namespace=cpu-example -o yaml | grep mili
13550  kubectl get pod forcpu --namespace=cpu-example -o yaml | grep milli
13551  kubectl get pod forcpu --namespace=cpu-example -o yaml | grep 500
13552  kubectl top pod forcpu --namespace-cpu-example
13553  kubectl top pod forcpu --namespace=cpu-example
13554  kubectl create ns qos-example
13555  cd ..
13556  git status 
13557  git add *
13558  git status 
13559  cd cka/configure-pod-and-container/
13560  vi qos-for-pod.yml
13561  kubectl get ns
13562  vi qos-for-pod.yml
13563  kubectl apply -f  qos-for-pod.yml --namespace=qos-example
13564  kubectl apply -f qos-for-pod.yml --namespace=qos-example
13565  vi qos-for-pod.yml
13566  kubectl apply -f qos-for-pod.yml --namespace=qos-example
13567  vi qos-for-pod.yml
13568  kubectl apply -f qos-for-pod.yml --namespace=qos-example
13569  kubectl get pod forqos --namespace=qos-example
13570  kubectl get pod forqos --namespace=qos-example -o yaml | Guar
13571  kubectl get pod forqos --namespace=qos-example -o yaml |grep Guar
13572  cd ..
13573  git status 
13574  git add *
13575  git commit -m "adding files for assinging a specific memory and cpu to pod and qos of pod"
13576  git push 
13577  kubectl get pods
13578  kubectl get pods --namespace=ALL
13579  kubectl get pods --namespace=mem-example
13580  kubectl get pods --namespace=qos-example
13581  kubectl get pods --namespace -h
13582  kubectl get pods -h
13583  kubectl get pods -h | grep namespace
13584  kubectl get pods --namespace=false
13585  kubectl get pods --all-namespace
13586  kubectl get pods -h
13587  kubectl get pods -h | less
13588  kubectl get pods --all-namespace=false
13589  kubectl get pods -h | less
13590  cd Kubernetes-practice/cka/configure-pod-and-container/
13591  ls
13592  vi extending-resources.yml
13593  kubectl get nodes
13594  PATCH /api/v1/nodes/<your-node-name>/status HTTP/1.1
13595  Accept: application/json
13596  Content-Type: application/json-patch+json
13597  Host: k8s-master:8080
13598  kubectl proxy
13599  curl --header "Content-Type: application/json-patch+json" --request PATCH --data '[{"op": "add", "path": "/status/capacity/example.com~1dongle", "value": "4"}]' kubectl proxy
13600  kubectl proxy
13601  vi extending-resources.yml
13602  vi volumeforpod.yml
13603  kubectl apply -f  volumeforpod.yml
13604  vi volumeforpod.yml
13605  kubectl apply -f  volumeforpod.yml
13606  vi volumeforpod.yml
13607  kubectl apply -f  volumeforpod.yml
13608  vi volumeforpod.yml
13609  kubectl apply -f  volumeforpod.yml
13610  kubectl create ns forvolume
13611  vi volumeforpod.yml
13612  kubectl apply -f  volumeforpod.yml --namespace=forvolume
13613  kubectl get pod redis --namespace=forvolume --watch
13614  kubectl get pod forvolume --namespace=forvolume --watch
13615  kubectl get pod volumeforpod --namespace=volume --watch
13616  kubectl get pod volumeforpod --namespace=forvolume --watch
13617  kubectl exec -it volumeforpod -- /bin/bash
13618  kubectl exec -it volumeforpod --namespace=forvolume-- /bin/bash
13619  kubectl get pods
13620  kubectl get pods --namespace=forpos
13621  kubectl get pods --namespace=forpod
13622  kubectl get pods --namespace=forvolume
13623  kubectl exec -it volumeforpod 
13624  kubectl exec -it volumeforpod -- /bin/bash
13625  kubectl exec -it volumeforpod --namespace=forvolume  /bin/bash
13626  kubectl get nod
13627  kubectl get nodes
13628  ssh saineel142c.mylabserver.com
13629  vi pvforpod.yml
13630  kubectl create -f  pvforpod.yml
13631  kubectl describe persistentvolume/pvforpod
13632  kubectl describe persistentvolume/pvforpod -o yaml
13633  kubectl describe persistentvolume/pvforpod -o yaml | grep neel
13634  kubectl describe persistentvolume/pvforpod -o yaml
13635  kubectl describe persistentvolume pvforpod -o yaml
13636  kubectl get persistentvolume pvforpod -o yaml
13637  kubectl get persistentvolume pvforpod 
13638  vi pvcforpod.yml
13639  kubectl create -f  pvcforpod.yml 
13640  ls | grep -R limiting-pvc-resources.yml 
13641  cd ..
13642  ls | grep -R limiting-pvc-resources.yml 
13643  ls | grep -R limit
13644  ls | grep -R limiting
13645  cd configure-pod-and-container/
13646  ls
13647  vi pvcforpod.yml 
13648  kubectl delete -f  pvcforpod.yml 
13649  ls
13650  kubectl delete -f pvforpod.yml 
13651  vi pvforpod.yml 
13652  kubectl create ns forpvandpvc
13653  kubectl apply -f pvforpod.yml 
13654  vi pvcforpod.yml 
13655  kubectl apply -f pvcforpod.yml 
13656  kubectl get persistentvolumeclaim/pvcfodpod -o yaml
13657  kubectl get persistentvolumeclaim/pvcfodpod --namespace forpvandovc -o yaml
13658  kubectl get persistentvolumeclaim/pvcfodpod --namespace forpvandpvc -o yaml
13659  kubectl get persistentvolumeclaim/pvcfodpod --namespace forpvandpvc
13660  vi pvcforpod.yml 
13661  kubectl get persistentvolume/pvfodpod --namespace forpvandpvc
13662  kubectl hist
13663  history 
13664  ls
13665  vi pvforpod.yml 
13666  kubectl get pv --namespace=forpvandpvc
13667  kubectl get persistentvolumeclaim/pvcfodpod --namespace forpvandpvc
13668  ls
13669  vi podwithpvc.yml
13670  kubectl get persistentvolumeclaim/pvcfodpod --namespace forpvandpvc
13671  vi podwithpvc.yml
13672  kubectl apply -f podwithpvc.yml 
13673  kubectl apply -f podwithpvc.yml --namespace=forpvandpvc
13674  kubectl get pod/task-pv-pod --namespace=forpvandpvc
13675  kubectl apply -f podwithpvc.yml --namespace=forpvandpvc
13676  kubectl describe pod/task-pv-pod --namespace=forpvandpvc
13677  vi podwithpvc.yml
13678  kubectl delete -f podwithpvc.yml --namespace=forpvandpvc
13679  kubectl apply -f podwithpvc.yml --namespace=forpvandpvc
13680  kubectl describe pod/task-pv-pod --namespace=forpvandpvc
13681  kubectl get pod/task-pv-pod --namespace=forpvandpvc
13682  kubectl exec -it task-pv-pod --namespace=forpvandpvc /bin/bash
13683  kubectl get pod/task-pv-pod --namespace=forpvandpvc
13684  kubectl describe pod/task-pv-pod --namespace=forpvandpvc
13685  ssh saineel142c.mylabserver.com
13686  kubectl exec -it task-pv-pod --namespace=forpvandpvc /bin/bash
13687  history 
13688  kubectl delete -f pvforpod.yml
13689  kubectl apply -f pvforpod.yml
13690  kubectl get pv
13691  kubectl get pv --namespace=forpvandpvc
13692  kubectl delete -f pvforpod.yml
13693  kubectl get pv --namespace=forpvandpvc
13694  vi podwithprojectedvolume.yml
13695  ls
13696  kubectl create ns all
13697  vi podwithprojectedvolume.yml
13698  cd Kubernetes-practice/cka/configure-pod-and-container/
13699  vi podwithprojectedvolume.yml
13700  kubectl apply -f  podwithprojectedvolume.yml
13701  vi podwithprojectedvolume.yml
13702  kubectl apply -f  podwithprojectedvolume.yml
13703  kubectl delete -f  podwithprojectedvolume.yml
13704  kubectl apply -f  podwithprojectedvolume.yml --namespace =all
13705  vi podwithprojectedvolume.yml
13706  kubectl get ns
13707  kubectl apply -f podwithprojectedvolume.yml --namespace =all
13708  kubectl apply -f podwithprojectedvolume.yml --namespace = all
13709  kubectl get ns
13710  kubectl get pods --namespace=qos-example
13711  kubectl get pods --namespace=all
13712  kubectl create -f podwithprojectedvolume.yml --namespace-all
13713  kubectl create pod -f podwithprojectedvolume.yml --namespace-all
13714  kubectl create pod -f podwithprojectedvolume.yml --namespace+all
13715  kubectl create pod -f podwithprojectedvolume.yml --namespace=all
13716  kubectl create -f podwithprojectedvolume.yml --namespace=all
13717  kubectl create -f podwithprojectedvolume.yml --namespace-all
13718  kubectl get pods --namespace=all
13719  echo -n "admin" > ./username.txt
13720  echo -n "1f2d1e2e67df" > ./password.txt
13721  kubectl create secret generic user --from-file=./username.txt
13722  kubectl create secret generic pass --from-file=./password.txt
13723  ls
13724  kubectl create secret generic user --from-file=./username.txt
13725  kubectl create secret generic user --from-file=./username.txt --namespace=all
13726  kubectl create secret generic user --from-file=./username.txt --namespace=allkubectl create secret generic pass --from-file=./password.txt --namespace=all
13727  kubectl create secret generic pass --from-file=./password.txt --namespace=all
13728  kubectl get pod podwithprojectedvolume --namespace=all --watch
13729  kubectl exec -it podwithprojectedvolume --namespace=all /bin/sh
13730  exit
13731  su user
13732  su linux
13733  cd Kubernetes-practice/cka/
13734  l
13735  cd ..
13736  git add *
13737  git status 
13738  git commit -m "adding files to configure pod and container folder"
13739  git push 
13740  cd cka/configure-pod-and-container/
13741  ls
13742  history 
13743  ll
13744  cat pv*
13745  kubectl describe pv pvcfodpod
13746  kubectl describe pv pvfodpod
13747  kubectl get pv
13748  kubectl describe pv pvforpod
13749  kubectl describe pv pvforpod -o yaml
13750  kubectl get pv pvforpod -o yaml
13751  kubectl get pvc pvcforpod -o yaml
13752  kubectl get ns
13753  kubectl get pvc pvcforpod -o yaml --namespace=forpvandpvc
13754  kubectl get pvc pvcforpod --namespace=forpvandpvc
13755  kubectl get pvc --namespace=forpvandpvc
13756  kubectl describe pvc pvcforpod --namespace=forpvandpvc
13757  kubectl get pvc --namespace=forpvandpvc
13758  kubectl describe pvc pvcforpod
13759  kubectl get pvc --namespace=forpvandpvc
13760  vi security-context-for-pod.yml
13761  kubectl apply -f  security-context-for-pod.yml
13762  vi security-context-for-pod.yml
13763  kubectl apply -f  security-context-for-pod.yml --namespace=all
13764  kubectl get pod/securitycontextforpod --namespace=all
13765  kubectl exec -it pod/securitycontextforpod --namespace=all
13766  kubectl exec -it pod/securitycontextforpod --namespace=all sh
13767  kubectl exec -it pod securitycontextforpod --namespace=all sh
13768  kubectl exec -it pod securitycontextforpod --namespace=all /bin/bash
13769  kubectl exec -it volumeforpod -- /bin/bash
13770  kubectl get pods --namespace=all
13771  kubectl exec -it securitycontextforpod 
13772  kubectl exec -it securitycontextforpod --sh
13773  kubectl exec -it securitycontextforpod -- sh
13774  kubectl exec -it securitycontextforpod --namespace=all sh
13775  vi security-context-for-pod.yml
13776  kubectl get pods --namespace=all
13777  kubectl describe pod/task-pv-pod --namespace=forpvandpvc
13778  kubectl describe pod/task-pv-pod --namespace=forpvandpvc | grep service
13779  kubectl get pods --namespace=all
13780  kubectl describe pod securitycontextforpod -o yaml
13781  kubectl describe pod securitycontextforpod --namespace=all -o yaml
13782  kubectl get pod securitycontextforpod --namespace=all -o yaml
13783  kubectl get pod securitycontextforpod --namespace=all -o yaml | less
13784  cd Kubernetes-practice/cka/configure-pod-and-container/
13785  kubectl get serviceAccounts
13786  kubectl apply -f - <<EOF
13787  apiVersion: v1
13788  kind: ServiceAccount
13789  metadata:
13790    name: build-robot
13791  EOF
13792  cat limitrange.yml 
13793  cd ..
13794  ls | grep -R limitran
13795  cd
13796  ls -l | grep -R limitran
13797  cd Kubernetes-practice/
13798  ls -l | grep -R limitran
13799  history 
13800  history | less
13801  ls
13802  cd cka/
13803  history >> commands_5_8.txt 
