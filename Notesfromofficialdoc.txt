reference - https://kubernetes.io/docs/home/?path=users&persona=app-developer&level=foundational

1. With multiple-zone clusters, this spreading behavior is extended across zones (to reduce the impact of zone failures.) (This is achieved via SelectorSpreadPriority)

2. When persistent volumes are created, the "PersistentVolumeLabel" admission controller automatically adds zone labels to them. And "VolumeZonePredicate" predicate) will then ensure that pods that claim a given volume are only placed into the same zone as that volume, as volumes cannot be attached across zones.

3. Volume zone-affinity will only work with a "PersistentVolume", and will not work if you directly specify an EBS volume 

4. Imperative commands-
   kubectl run nginx --image nginx
   kubectl create deployment nginx --image nginx
   kubectl create -f nginx.yaml
   kubectl delete -f nginx.yaml -f redis.yaml
   kubectl replace -f nginx.yaml
   kubectl apply -f configs/
   kubectl apply -R -f configs/
   run: Create a new Deployment object to run Containers in one or more Pods.
   expose: Create a new Service object to load balance traffic across Pods.
   autoscale: Create a new Autoscaler object to automatically horizontally scale a controller, such as a Deployment.
   scale: Horizontally scale a controller to add or remove Pods by updating the replica count of the controller.
   annotate: Add or remove an annotation from an object.
   label: Add or remove a label from an object.
   set : Set an aspect of an object.
   edit: Directly edit the raw configuration of a live object by opening its configuration in an editor.
   patch: Directly modify specific fields of a live object by using a patch string
   get: Prints basic information about matching objects. Use get -h to see a list of options.
   describe: Prints aggregated detailed information about matching objects.
   logs: Prints the stdout and stderr for a container running in a Pod
   

